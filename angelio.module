<?php

// watchdog("my_module", '<pre>' . print_r( $my_array_or_object, true) . '</pre>'); 



/**
 * Implements hook_boot(). Benutzernamen werden direkt nach dem Slash gelesen und umgeleitet.
 */
function angelio_boot() {
  // Format www.angelio.at/username
  if (isset($_GET['q']) && angelio_validate_url($_GET['q'])) {
	$row = db_query('SELECT name FROM users WHERE UPPER(name) = UPPER(:name)', array(':name' => $_GET['q']))->fetchObject();
    if ($row) {
      angelio_goto($row,'');
    }
  }
  
  // Format username.angelio.at/irgendwas
  $subdomain = explode(".",$_SERVER['HTTP_HOST']);
  if ($subdomain[0] == "www" && $subdomain[1] != "angelio") {
      array_shift($subdomain);
  }
  
  if ($subdomain[0] != "www" && $subdomain[0] != "angelio") {
    $row = db_query('SELECT name FROM users WHERE UPPER(name) = UPPER(:name)', array(':name' => $subdomain[0]))->fetchObject();
    if ($row) {
      if (isset($_GET['q']) && angelio_validate_url($_GET['q'])) {
        angelio_goto($row,$_GET['q']);
      } else {
          angelio_goto($row,'');
      }
    }      
  }
}

/**
 * Validate custom short URL string
 *
 * @return TRUE if valid, FALSE if invalid
 */
function angelio_validate_url($custom) {

  // check the length of the string
  if (strlen($custom) == 0) {
    return FALSE;
  }

  // disallow: #%&@*{}\:;<>?/+.,'"$|`^[] and space character
  return preg_match('/[ÄÖÜäöüß\/#%&\@\*\{\}\\:\;<>\?\+ \.\,\'\"\$\|`^\[\]]/u', $custom) ? FALSE : TRUE;
}

/**
 * A heavily modified version of drupal_goto() (which hasn't been bootstrapped during hook_boot()
 */
function angelio_goto($row,$q='') {
  if (!$row || (isset($_GET['redirect']) && $_GET['redirect'] == 'false')) {
    return;
  }

  $url = "join/" . $row->name;

  // Remove newlines from the URL to avoid header injection attacks.
  $url = str_replace(array("\n", "\r"), '', $url);

  // We do not want this while running update.php.
  if (!defined('MAINTENANCE_MODE') || MAINTENANCE_MODE != 'update') {

    // Allow modules to react to the end of the page request before redirecting.
    module_invoke_all('exit', $url);
  }
 
  $url = "http://www.angelio.at/" . $url . "/" . $q;
  // Even though session_write_close() is registered as a shutdown function, we
  // need all session data written to the database before redirecting.
  session_write_close();

  header('Location: ' . $url, TRUE, 301);

  // header has been sent... browser has been redirected
  // now we can do any expensive operations

  // update access information on this row
  // db_query('UPDATE {shurly} SET count = count + 1, last_used = :time WHERE rid = :rid', array('time' => time(), 'rid' => $row->rid));

  // note: If possible, other modules should probably insert more information
  // in the database by using hook_db_rewrite_sql() on the above query
  // rather than creating a new db call

  // The "Location" header sends a redirect status code to the HTTP daemon. In
  // some cases this can be wrong, so we make sure none of the code below the
  // drupal_goto() call gets executed upon redirection.
  exit();
}



// $Id$
global $base_url;
global $user;

require_once('user-forms.inc');
require_once('num2text.inc');

if (isset($user) && ($user->uid == 1)) {
	require_once('admin.inc');
}

// include IBAN test library
  $path = function_exists('libraries_get_path') ? libraries_get_path('php-iban') : 'sites/all/libraries/php-iban';
  if (!include($path . '/php-iban.php')) {
  }
 

function angelio_init() {
    global $user;
    drupal_add_css(drupal_get_path('module', 'angelio') . '/angelio.css');
	// eingeloggten Benutzer umleiten, wenn er versucht sich zu registrieren
	if (isset($_REQUEST['q'])) { 
		if ($_REQUEST['q'] == 'user/register' && $user->uid > 0)
	    {
	        drupal_goto('user');
	    }
	}

/*
    global $base_path;
    drupal_add_js("
$(document).ready(function() {
$('#angelio img').click(function() {
  $.get('http://" . $_SERVER['HTTP_HOST'] . $base_path . "?q=tree/get/'+$(this).attr('title'));
  window.setTimeout('location.reload()', 500);
});
});", 'inline');
*/

// Username und Vorname an Javascript übergeben:


 	// gerfis: geht in D7 einfach nicht
	$uid = $user->uid;
	$userdata = angelio_get_userdata($uid);
	$angelio_settings = array(
		'username' => $userdata['strUsername_O'],
		'vorname' => $userdata['strVName_O']
	);	

	drupal_add_js(array('angelio' => $angelio_settings), 'setting');
	
	/*
	$element['#attached']['js'][] = array(
  		'type' => 'setting',
  		'data' => array('angelio' => array('username' => $userdata['strUsername_O'], 'vorname' => $userdata['strVName_O'])),
	);
*/

    drupal_add_css(drupal_get_path('module', 'angelio') . '/tree/tree.css');
	drupal_add_js(drupal_get_path('module', 'angelio') . '/tree/tree.js');
	drupal_add_js(drupal_get_path('module', 'angelio') . '/tree/ajax.js');
}


function angelio_permission() {
	  return array(
    'access own downline' => array(
      'title' => t('Access own Downline'),
    ),
    'access all downlines' => array(
      'title' => t('Access all Downlines'),
    ),
     'access own commission' => array(
      'title' => t('Access own Commission'),
    ),
    'access all commissions' => array(
      'title' => t('Access all Commissions'),
    ),
     'access own polizzen' => array(
      'title' => t('Access own Polizzen'),
    ),
    'access all polizzen' => array(
      'title' => t('Access all Polizzen'),
    ),
    'access own kontoauszug' => array(
      'title' => t('Access own Kontoauszug'),
    ),
    'access all kontoauszug' => array(
      'title' => t('Access all Kontoauszug'),
    ),
  );
}

function fdate($datetimestring = '1970-01-01 00:00:00', $format = 'U') {
  // Create a datetime object, return it formatted
  // If you want to give credit for this somewhere, thanks.
  // You really don't have to though; this is kinda obvious
  
  $dt = new DateTime($datetimestring);
  return $dt->format($format);
} 


function angelio_mail($key, &$message, $params) {
  switch ($key) {
    case 'kuendigen':
      // note: data can be passed to this function in the $params array
      $message['subject'] = 'angelio Kündigung';
	  $body = "Hallo " . $params['Vorname'] . "!\n\nDein Vertrag mit der AIG-Nummer " . $params['Polizze'] . " wird gekündigt.\n\n";
	  $body .= "Deine Daten:\n\n";
  	  $body .= 'Username: ' . $params['Username'] . '\n';
	  $body .= 'Vorname: ' . $params['Vorname'] . '\n';
	  $body .= 'Nachname: ' . $params['Nachname'] . '\n';	
	  $body .= 'Strasse: ' . $params['Strasse'] . '\n';
	  $body .= 'PLZ: ' . $params['PLZ'] . '\n';
	  $body .= 'Ort: ' . $params['Ort'] . '\n';
	  $body .= 'Land: ' . $params['Land'] . '\n';
	  $body .= 'Polizze: ' . $params['Polizze'] . '\n';
	  $body .= 'Datum: ' . $params['Datum'] . '\n'; 
	  $body .= "\nDein angelio Team.";
      $message['body'][] = $body;
      break;    
    case 'erweitern':
      // note: data can be passed to this function in the $params array
      $message['subject'] = "angelio Vertragserweiterung";
      $message['body'][] = "Hallo " . $params['Vorname'] . "!\n\nDein Vertrag mit der AIG-Nummer " . $params['Polizze'] . " wird erweitert.\n\nDein angelio Team.";
      break;
    case 'upline':
      // note: data can be passed to this function in the $params array
      $message['subject'] = "Deine angelio Downline wächst!";
      $body = "Hallo " . $params['Receivername'] . "!\n\nGratuliere, du hast ein neues Mitglied in deiner Downline bekommen:\n\n";
	  $body .= "Sponsor: ". $params['Sponsorname']. "\n";
      $body .= "Upline: " . $params['Uplinename']. "\n\n";
	  $body .= "Neues Mitglied: ". $params['Neuervname']. " " . $params['Neuernname']. "\n";
	  $body .= "Username: ". $params['Neueruser']. "\n\n";
	  $body .= "\n\nDenk daran, jedes neue Mitglied kann für einen Wachstumsschub in Deiner gesamten Downline verantwortlich sein.\nAlso informiere so viele Menschen wie möglich über unseren Verein, um Deinen Nebenverdienst zu erhöhen.";
      $body .= "\n\nDein angelio Team.";
      $message['body'][] = $body;
      break;	  
   case 'neuer':
      $message['subject'] = "Neue Anmeldung bei angelio: " . $params['Neueruser'];
       $body = "Neues angelio Mitglied: \n\n";
      $body .= "Sponsor: " . $params['Sponsorname']. "\n";
      $body .= "Upline: " . $params['Uplinename']. "\n\n";	  
      
	  $body .= "Username: ". $params['Neueruser']. "\n";
      $body .= "Vorname: ". $params['Neuervname']. "\n";
      $body .= "Nachname: ". $params['Neuernname']. "\n\n";
      
      $body .= "Strasse: ". $params['Strasse']. "\n";
      $body .= "PLZ: ". $params['PLZ']. "\n";
      $body .= "Ort: ". $params['Ort']. "\n";
      $body .= "Tel: ". $params['Tel']. "\n";
      $body .= "E-Mail: ". $params['Mail']. "\n";
      $body .= "Geburtsdatum: ". $params['Geburtstag']. "\n";
      $body .= "Beruf: ". $params['Beruf']. "\n\n";
      
      $body .= "IBAN: ". $params['IBAN']. "\n";
      $body .= "BIC: ". $params['BIC']. "\n";
      $body .= "Zahlungsintervall: ". $params['Zahlung']. " (1=Jahr, 2=Halbjahr, 4=Quartal, 12=Monat)\n\n";
      
      $body .= "Polizze: ". $params['Polizze']. "\n";
      
      $message['body'][] = $body;
      break;	   
   case 'edit':
      $message['subject'] = "Datenänderung bei angelio: " . $params['Neueruser'];
       $body = "Ein Mitglied hat seine Daten geändert: \n\n";

      $body .= "Username: ". $params['Neueruser']. "\n";
      $body .= "Vorname: ". $params['Neuervname']. "\n";
      $body .= "Nachname: ". $params['Neuernname']. "\n\n";
      
      $body .= "Strasse: ". $params['Strasse']. "\n";
      $body .= "PLZ: ". $params['PLZ']. "\n";
      $body .= "Ort: ". $params['Ort']. "\n";
      $body .= "Tel: ". $params['Tel']. "\n";
      $body .= "E-Mail: ". $params['Mail']. "\n";
      $body .= "Geburtsdatum: ". $params['Geburtstag']. "\n";
      $body .= "Beruf: ". $params['Beruf']. "\n\n";
      
      $body .= "IBAN: ". $params['IBAN']. "\n";
      $body .= "BIC: ". $params['BIC']. "\n";
      $body .= "Zahlungsintervall: ". $params['Zahlung']. " (1=Jahr, 2=Halbjahr, 4=Quartal, 12=Monat)\n\n";
      
      $message['body'][] = $body;
      break; 
    case 'testen':
      // note: data can be passed to this function in the $params array
      $message['subject'] = "angelio Testmail";
      $message['body'][] = "Hallo " . $params['Vorname'] . "!\n\nDas ist ein angelio Testmail.\n\nDein angelio Team.";
      break;
    case 'backup':
      // note: data can be passed to this function in the $params array
      $message['subject'] = "angelio Backup Manager Aktivierung";
      $body = "User: " . $params['user'] . "\n";
      $body .= "UId: " . $params['uid'] . "\n";
      $body .= "User E-Mail: " . $params['usermail'] . "\n\n";
      $body .= "Subdomain: " . $params['Subdomain'] . "\n";
      $body .= "Backup E-Mail: " . $params['Email'] . "\n";
      $message['body'][] = $body;
      break;      
    case 'amazonBeantragt':
      // note: data can be passed to this function in the $params array
      $message['subject'] = "angelio Amazon ID beantragt";
      $body = "Bitte Amazon ID einrichten:\n\n";
      $body .= "User: " . $params['user'] . "\n";
      $body .= "UId: " . $params['uid'] . "\n";
      $body .= "User E-Mail: " . $params['usermail'] . "\n\n";
      $body .= "<a href='http://www.angelio.at/amazon-aktivieren/" .$params['uid']."'>http://www.angelio.at/amazon-aktivieren/" .$params['uid']."</a>"; 
      $message['body'][] = $body;
      break; 
    case 'amazonAktiviert':
      // note: data can be passed to this function in the $params array
      $message['subject'] = "Deine angelio Amazon ID wurde aktiviert";
      $body = "Hallo " . $params['vorname'] . "!\n\n";
      $body .= "Deine Amazon ID wurde aktiviert: angel" . $params['uid'] . "-21.\n\n";
      $body .= "Mit diesen Links werden Dir ab sofort Deine Einkäufe bei Amazon zugeordnet:\n\n";
      $body .= "Das ist Dein Amazon Link: <a target='_blank' href='http://www.amazon.de/?tag=angel" . $params['uid'] . "-21'>http://www.amazon.de/?tag=angel" . $params['uid'] . "-21</a>\n\n";
      $body .= "Das ist Dein Amazon BuyVIP Link: <a target='_blank' href='http://de.buyvip.com/?tag=angel" . $params['uid'] . "-21'>http://de.buyvip.com/?tag=angel" . $params['uid'] . "-21</a>\n\n";
      $body .= "Dein angelio Team";
      $message['body'][] = $body;
      break;
      
  }
}


function angelio_menu() {
    $items = array();
	
	
/*
	$items['admin/angelio'] = array(
		'title' => 'ANGELIO',
		'description' => 'This is the parent item',
		'position' => 'left',
		'weight' => -100,
		'page callback' => 'system_admin_menu_block_page',
		'access arguments' => array('administer site configuration'),
		'file' => 'system.admin.inc',
		'file path' => drupal_get_path('module', 'system'),
	);
	 
	// Need at least one child item before your section will appear.
	$items['admin/angelio/testdaten'] = array(
		'title' => 'angelio Testdaten',
		'description' => 'angelio Testdaten anlegen und löschen',
		'page callback' => 'angelio_admin',
		'access arguments' => array('administer site configuration'),
	);

	$items['admin/angelio/testmail'] = array(
		'title' => 'angelio Testmail',
		'description' => 'angelio Testmail senden',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('angelio_testmail_form'), 
		'access arguments' => array('administer site configuration'),
	);
*/

    $items['join/%'] = array(
        'title' => 'Register',
        'page callback' => 'angelio_register',
        'page arguments' => array(1),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
	
    $items['join'] = array(
        'title' => 'join',
        'page callback' => 'angelio_join',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
    
  $items['downline/%'] = array(
    'title' => 'Meine Frontlines',
    'description' => 'Meine angelio Frontlines',
    'page callback' => 'angelio_mydownline',
    'page arguments' => array(1),
    'access arguments' => array('access all downlines'),
  );
  
  $items['downline'] = array(
    'title' => 'Meine Genealogie',
    'description' => 'Meine angelio Genealogie',
    'page callback' => 'angelio_mydownline',
    'page arguments' => array(2),    
    'access arguments' => array('access own downline'),
  );
      	
  $items['matrix/%'] = array(
    'title' => 'Meine 3x9 Matris',
    'description' => 'Meine angelio 3x9 Matrix',
    'page callback' => 'angelio_mymatrix',
    'page arguments' => array(1),
    'access arguments' => array('access all downlines'),
  );
  
  $items['matrix'] = array(
    'title' => 'Meine 3x9 Matrix',
    'description' => 'Meine angelio 3x9 Matrix',
    'page callback' => 'angelio_mymatrix',
    'page arguments' => array(2),    
    'access arguments' => array('access own downline'),
  );
  
  $items['gesamtmatrix'] = array(
    'title' => 'Gesamte 3x9 Matrix',
    'description' => 'Die gesamte angelio 3x9 Matrix',
    'page callback' => 'angelio_gesamtmatrix',
    'page arguments' => array(2),    
    'access arguments' => array('access all downline'),
  );  
  
  $items['angelio/position/%/%'] = array(
    'title' => 'New Position',
    'description' => 'Next free position',
    'page callback' => 'angelio_TestInsert',
    'page arguments' => array(2,3),
    'access arguments' => array('administer site configuration'),
  );

  $items['angelio/position/%/%/%'] = array(
    'title' => 'New Position',
    'description' => 'Next free position',
    'page callback' => 'angelio_TestInsert',
    'page arguments' => array(2,3,4),
    'access arguments' => array('administer site configuration'),
  );

    $items['angelio/resettests'] = array(
        'title' => 'Testdaten gelöscht',
        'page callback' => 'angelio_resettests',
        'access arguments' => array('administer site configuration'),
        'type' => MENU_CALLBACK,
    );

    $items['vertraege'] = array(
        'title' => 'Meine angelio Verträge',
        'page callback' => 'angelio_vertraege',
        'page arguments' => array('0'),                       
        'access arguments' => array('access own commission'),
        'type' => MENU_CALLBACK,
    );
    
        $items['vertraege/%'] = array(
        'title' => 'Meine angelio Verträge',
        'page callback' => 'angelio_vertraege',
        'page arguments' => array(1),               
        'access arguments' => array('access all commissions'),
        'type' => MENU_CALLBACK,
    );	
		
        $items['polizze/%/%'] = array(
        'title' => 'Meine angelio Polizze',
        'page callback' => 'angelio_unfall_polizze',
        'page arguments' => array(1,2),               
        'access arguments' => array('access own polizzen'),
        'type' => MENU_CALLBACK,
    );
	

    $items['provision'] = array(
        'title' => 'Meine angelio Abrechnung',
        'page callback' => 'angelio_provision',
        'page arguments' => array('0'),                       
        'access arguments' => array('access own commission'),
        'type' => MENU_CALLBACK,
    );
    
        $items['provision/%'] = array(
        'title' => 'Meine angelio Abrechnung',
        'page callback' => 'angelio_commission',
        'page arguments' => array(1),               
        'access arguments' => array('access all commissions'),
        'type' => MENU_CALLBACK,
    );	

	
    $items['konto'] = array(
        'title' => 'Mein angelio Kontoauszug',
        'page callback' => 'angelio_kontoauszug',
        'page arguments' => array('0'),                       
        'access arguments' => array('access own kontoauszug'),
        'type' => MENU_CALLBACK,
    );
    
        $items['konto/%'] = array(
        'title' => 'Mein angelio Kontoauszug',
        'page callback' => 'angelio_kontoauszug',
        'page arguments' => array(1),               
        'access arguments' => array('access all kontoauszug'),
        'type' => MENU_CALLBACK,
    );

        $items['kuendigen/%'] = array(
        'title' => 'Vertrag kündigen',
        'page callback' => 'angelio_kuendigen',
        'page arguments' => array(1),               
        'access arguments' => array('access own polizzen'),
        'type' => MENU_CALLBACK,
    );
	
        $items['kuendigen/%/jetzt'] = array(
        'title' => 'Vertrag jetzt kündigen',
        'page callback' => 'angelio_kuendigen_jetzt',
        'page arguments' => array(1),               
        'access arguments' => array('access own polizzen'),
        'type' => MENU_CALLBACK,
    );
	
        $items['kuendigen/%/sofort'] = array(
        'title' => 'Vertrag wird gekündigt',
        'page callback' => 'angelio_kuendigen_sofort',
        'page arguments' => array(1),               
        'access arguments' => array('access own polizzen'),
        'type' => MENU_CALLBACK,
    );
	
        $items['erweitern/%'] = array(
        'title' => 'Leistung erweitern',
        'page callback' => 'angelio_erweitern',
        'page arguments' => array(1),               
        'access arguments' => array('access own polizzen'),
        'type' => MENU_CALLBACK,
    );

        $items['erweitern/%/jetzt'] = array(
        'title' => 'Vertrag jetzt erweitern',
        'page callback' => 'angelio_erweitern_jetzt',
        'page arguments' => array(1),               
        'access arguments' => array('access own polizzen'),
        'type' => MENU_CALLBACK,
    );

        $items['erweitern/%/sofort'] = array(
        'title' => 'Vertrag wird erweitert',
        'page callback' => 'angelio_erweitern_sofort',
        'page arguments' => array(1),               
        'access arguments' => array('access own polizzen'),
        'type' => MENU_CALLBACK,
    );
		
    $items['schaden'] = array(
        'title' => 'angelio Unfallschadensmeldung',
        'page callback' => 'angelio_schaden',
        'page arguments' => array('0'),                       
        'access arguments' => array('access own downline'),
        'type' => MENU_CALLBACK,
    );		


    $items['backup'] = array(
        'title' => 'Mein angelio Backup',
        'page callback' => 'angelio_backup',
        'page arguments' => array('0'),                       
        'access arguments' => array('access own downline'),
        'type' => MENU_CALLBACK,
    );
	
        $items['backup/%'] = array(
        'title' => 'Mein angelio Backup',
        'page callback' => 'angelio_backup',
        'page arguments' => array(1),               
        'access arguments' => array('access own downline'),
        'type' => MENU_CALLBACK,
    );
	
    $items['visitenkarten'] = array(
        'title' => 'Meine angelio Visitenkarten',
        'page callback' => 'angelio_visitenkarten',
        'page arguments' => array('0'),                       
        'access arguments' => array('access own downline'),
        'type' => MENU_CALLBACK,
    );
	
    $items['visitenkarten.pdf'] = array(
        'title' => 'Meine angelio Visitenkarten',
        'page callback' => 'angelio_visitenkarten',
        'page arguments' => array('0'),                       
        'access arguments' => array('access own downline'),
        'type' => MENU_CALLBACK,
    );
		
        $items['visitenkarten/%'] = array(
        'title' => 'Meine angelio Visitenkarten',
        'page callback' => 'angelio_visitenkarten',
        'page arguments' => array(1),               
        'access arguments' => array('access own downline'),
        'type' => MENU_CALLBACK,
    );
	

    $items['flyer'] = array(
        'title' => 'Mein angelio Flyer',
        'page callback' => 'angelio_flyer',
        'page arguments' => array('0'),                       
        'access arguments' => array('access own downline'),
        'type' => MENU_CALLBACK,
    );
	
        $items['flyer/%'] = array(
        'title' => 'Mein angelio Flyer',
        'page callback' => 'angelio_flyer',
        'page arguments' => array(1),               
        'access arguments' => array('access own downline'),
        'type' => MENU_CALLBACK,
    );

        $items['scheck/%/%/%/%'] = array(
        'title' => 'Mein angelio Scheck',
        'page callback' => 'angelio_scheck',
        'page arguments' => array(1,2,3,4),               
        'access arguments' => array('access own downline'),
        'type' => MENU_CALLBACK,
    );
    
    $items['amazon-beantragen'] = array(
        'title' => 'Amazon ID',
        'page callback' => 'angelio_amazon_beantragen',
        'page arguments' => array('0'),               
        'access arguments' => array('access own downline'),
        'type' => MENU_CALLBACK,
    );
    
    
    $items['amazon-aktivieren/%'] = array(
        'title' => 'Amazon wurde aktiviert!',
        'page callback' => 'angelio_amazon_aktivieren',
        'page arguments' => array(1),               
        'access arguments' => array('administer site configuration'),
        'type' => MENU_CALLBACK,
    );
	
    $items['gs/check/%/%'] = array(
        'title' => 'Gutschein einlösen',
        'page callback' => 'angelio_gutschein_check',
        'page arguments' => array(2,3), 
        'access arguments' => array('access content'),
    );
    
    $items['gs/clear/%/%'] = array(
        'title' => 'Gutschein freigeben',
        'page callback' => 'angelio_gutschein_clear',
        'page arguments' => array(2,3), 
        'access arguments' => array('administer site configuration'),
    );    
    
    
    $items['gutschein/%/%'] = array(
        'title' => 'Gutschein ausdrucken',
        'page callback' => 'angelio_gutschein_drucken',
        'page arguments' => array(1,2), 
        'access arguments' => array('access content'),
    );
    
    
    
 /*  
        $items['mein-angelio'] = array(
        'title' => 'Mein angelio',
        'page callback' => 'angelio_meinangelio',
        'page arguments' => array(0),               
        'access arguments' => array('access own downline'),
        'type' => MENU_CALLBACK,
    );

			
	// Pager Test items
	$items['test/pager'] = array(
   	  'title' => 'Konto test pager',
	  'type' => MENU_CALLBACK,
	  'page callback' => 'angelio_test_pager',
	  'access arguments' => array('access content')
	); 	 
	  
	$items['konto/callback'] = array(
	  'title' => 'Konto Pager Callback',
	  'type' => MENU_CALLBACK,
	  'page callback' => '_angelio_konto_pager_callback',
	  'access arguments' => array('access content'),
	);
	
    $items['angelio_sync_shop'] = array(
        'title' => 'angelio Shop Synchronisation',
        'page callback' => 'angelio_sync_shop',
        'access arguments' => array('access all downlines'),
        'type' => MENU_CALLBACK,
    );
*/
		
	return $items;
}


/**
 * Implements hook_block_info().
 */
function angelio_block_info() {
  $blocks = array();
  $blocks['angelio_footer_block'] = array(
    'info' => t('Angelio Footer'),
  );
  
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function angelio_block_view($delta='') {
  $block = array();
  
  switch($delta) {
    case 'angelio_footer_block' :
      $block['content'] = angelio_footer_block_view();
      break;
  }
  
  return $block;
}

function angelio_footer_block_view() {
    
    $result = db_query("Select count(uid) from {users}")->fetchCol();
    $output = "Aktive Mitglieder: " . $result[0];
    return $output;
}

function angelio_testmail_form($form,&$form_state) {
	$form['vorname'] = array(
		'#type' => 'textfield',
		'#title' => 'Dein Vorname',
		'#required' => TRUE
	);
	$form['email'] = array(
		'#type' => 'textfield',
		'#title' => 'Deine E-Mail',
		'#required' => TRUE
	);
	
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Submit'),
	);
	
	return $form;		
}

function angelio_testmail_form_submit(&$form_state) {
	$params = array();
	$params['Vorname'] = $form_state['vorname']['#value'];
	
	$to = $form_state['email']['#value'];
	$sent = drupal_mail('angelio', 'testen', $to, language_default(), $params, 'office@angelio.eu');
	
	if ($sent['result']) {
		drupal_set_message('E-Mail an ' . $form_state['vorname']['#value'] . ' an Adresse ' . $form_state['email']['#value'] . ' gesendet.');
	} else {
		drupal_set_message('Fehler beim Senden: ' . $sent);
	}
	
	watchdog("my_module", '<pre>' . print_r( $sent, true) . '</pre>'); 
}


function angelio_join() {
	$_SESSION['sponsor_uid'] = "";
	$_SESSION['sponsor_name'] = "";
	drupal_goto('user/register');
}

function angelio_theme() {
  $items = array();

  $items['unfall_polizze'] = array(
    'type' => 'theme',
    'template' => 'unfall-polizze',
    'path' => drupal_get_path('module', 'angelio'),    
    'variables' => array('userdata' => NULL),
  );

/*
  $items['user_register_form'] = array (
     'render element' => 'form',
     'path' => drupal_get_path('theme','aqua') . '/templates',
     'template' => 'user-register-form',
     //'preprocess functions' => array('YOURTHEME_preprocess_user_register_form'),
  );
  */
  
  return $items;
}

/*
function angelio_theme() {
  return array(
     'user_register' => array(
      'template' => 'user-register-form',
      'arguments' => array('form' => NULL),
   	), 
   	'unfall_polizze' => array(
      'template' => 'unfall-polizze',
      'arguments' => array('userdata' => NULL),	
	), 
  'user_profile_form' => array(
    'arguments' => array('form' => NULL),
    'template' => 'user-profile-edit',
    'render element' => 'form',
    ),
  );
}

 * 
 */
function angelio_register($uid) {
	if (angelio_check_sponsor($uid)) {
		if (arg(2) == "") {
			drupal_goto('<front>');
		} else if (arg(2) == "register") {
			drupal_goto('user/register');
		} else {
			drupal_goto(arg(2));
		}			
	} else {
		return '<br>' . t('User "@uid" unknown.', array('@uid' => $uid));
	} 
}

function angelio_check_sponsor($uid) {
	$userinfo = db_query("SELECT uid, name FROM {users} WHERE uid='" . $uid . "'")->fetchAssoc();
	if ($userinfo['uid']) {
		$_SESSION['sponsor_uid'] = $userinfo['uid'];
		$_SESSION['sponsor_name'] = $userinfo['name'];
		setcookie('sponsor', $userinfo['name'], time() + 3600 * 24 * 180, '/user/register');
		//print_r($_COOKIE['sponsor']);		
		return true;
	} else {
		$userinfo = db_query("SELECT uid, name FROM {users} WHERE UPPER(name)=UPPER('" . $uid . "')")->fetchAssoc();
		if ($userinfo['name']) {
			$_SESSION['sponsor_uid'] = $userinfo['uid'];
			$_SESSION['sponsor_name'] = $userinfo['name'];
			setcookie('sponsor', $userinfo['name'], time() + 3600 * 24 * 180, '/user/register');		
			return true;
		} else {
			$_SESSION['sponsor_uid'] = '';
			$_SESSION['sponsor_name'] = '';
			return false;
		}
	}
}

function angelio_user_delete($account) {
	// Benutzer aus boucado matrix löschen
	db_set_active('angelio_daten');

	$num_deleted = db_delete('tbl_Kunden_Online')
		->condition('KundenID_online', $account->uid)
		->execute();

	db_set_active();	
	
	drupal_set_message("Der Benutzer wurde aus der angelio Matrix gelöscht.");

}



function print_pre($p,$titel="") {
	if ($titel<>"") {print $titel . ": ";} 
	print "<pre>";
	print_r($p);
	print "</pre>";
}

function query_debug($query){
	print "<pre>";
	print "Query: <br>";
	print_r($query->__toString());
	print "<br><br>";
	print "Arguments: <br>";	
	print_r($query->arguments());
	print "</pre>";
}

function angelio_user_presave(&$edit, $account, $category) {

  if ($account->uid) { // user is not new
	  if ($account->status === "0" && isset($edit['status']) && $edit['status']==1) { // user is being activated

	  
	    // Benutzer Rolle setzen
		if ($role = user_role_load_by_name('BRONCE')) {
			// Funktioniert einfach nicht...
			  
	        // user_multiple_role_edit(array($account->uid), 'add_role', $role->rid);

	        /* auch nicht
	        $user = user_load($account->uid);
			$user->roles = $user->roles + array($role->rid => $role->name);
			user_save($user);
			*/
			
			db_set_active('angelio_daten');
			// Dem Member die host_id eintragen
			db_update('tbl_Kunden_Online')
				->fields(array('bonuslevel' => 2))
				->condition('KundenID_online', $account->uid, '=')
				->execute();
			db_set_active();
			
			drupal_set_message("Willkommen bei angelio!");
	      }    
	  }
  }
}


function angelio_mail2upline($uid) {
		// E-Mail an Upline senden
		
		$level = 1;
		$member = angelio_get_userobject($uid);
		$sponsor = angelio_get_userdata($member->sponsor_id);	
		$UplineID_O = $member->upline_id;

        $params = array(
            'Receivername' => '',
            'Uplinename' => $member->upline,
            'Sponsorname' => $member->sponsor,
            'Neuervname' => $member->first_name,
            'Neuernname' => $member->last_name,
            'Neueruser' => $member->username,
            'Strasse' => $member->street,
            'PLZ' => $member->postal,
            'Ort' => $member->city,
            'Land' => $member->country,
            'Tel' => $member->phone,
            'Mail' => $member->email,
            'IBAN' => $member->iban,
            'BIC' => $member->bic,
            'Zahlung' => $member->payment,
            'Geburtstag' => $member->birthday,
            'Beruf' => $member->job,
            'Polizze' => $member->polizze,
        );

		// solange nicht oben angekommen und Level < 10: 
		while ($UplineID_O > 0 && $level < 10) {
	
			$upline = angelio_get_userdata($UplineID_O);
			$UplineID_O = $upline['SponsorID_O'];
            $params['Receivername'] = $upline['strVName_O'];
                    
			$to = $upline['strEmail_O'];
			$sent = drupal_mail('angelio', 'upline', $to, language_default(), $params, 'office@angelio.at');
			
			$level++;
		}
			
		$to = "office@angelio.at";
		$sent = drupal_mail('angelio', 'neuer', $to, language_default(), $params, 'office@angelio.at');
}

function angelio_mail2office($uid) {
        // E-Mail an Office senden
        
        $member = angelio_get_userobject($uid);

        $params = array(
            'Receivername' => '',
            'Uplinename' => $member->upline,
            'Sponsorname' => $member->sponsor,
            'Neuervname' => $member->first_name,
            'Neuernname' => $member->last_name,
            'Neueruser' => $member->username,
            'Strasse' => $member->street,
            'PLZ' => $member->postal,
            'Ort' => $member->city,
            'Land' => $member->country,
            'Tel' => $member->phone,
            'Mail' => $member->email,
            'IBAN' => $member->iban,
            'BIC' => $member->bic,
            'Zahlung' => $member->payment,
            'Geburtstag' => $member->birthday,
            'Beruf' => $member->job,
            'Polizze' => $member->polizze,
        );
            
        $to = "office@angelio.at";
        $sent = drupal_mail('angelio', 'edit', $to, language_default(), $params, 'office@angelio.at');
}


function angelio_get_userdata($uid) {
	db_set_active('angelio_daten');
	$userdata = db_query("SELECT * FROM {tbl_Kunden_Online} WHERE KundenID_online='" . $uid . "'")->fetchAssoc();
	db_set_active(); 
	return $userdata;
}

function angelio_get_username($member_id) {
// Member holen
	db_set_active('angelio_daten');
	$query = db_select('tbl_Kunden_Online', 'm');
	$query
		->fields('m')
  		->condition('m.KundenID_online', $member_id, '=')
  		->range(0, 1);
	$result = $query->execute();
	db_set_active();
	
	foreach ($result as $record) {
  		$thisuser = $record;
	}	
	return $thisuser->strUsername_O;
}

function angelio_get_userobject($username) {
global $user;

	if ($username=="") {$username = $user->name;}
	  // For convenience, we'll allow user ids as well as full user objects.
	if (is_numeric($username)) {
		$member = user_load($username);
		$username = $member->name; 
	}

	if ($username=="Demo" || $username=="Helpdesk") {
		$thisuser = new stdClass();
		$thisuser->member_id=0;
		$thisuser->username="demo";
		$thisuser->first_name="Demo";
		$thisuser->last_name="Demo";
		$thisuser->street="Demostreet";
		$thisuser->postal="10000";
		$thisuser->city="Democity";
		$thisuser->country="Democountry";
		$thisuser->phone="123456";
		$thisuser->email="demo@demo.com";
        $thisuser->iban="AT111111111111111111";
        $thisuser->bic="BICBICBIC";      
        $thisuser->payment="1";
        $thisuser->birthday="2000-01-01";
        $thisuser->job="Marketing";
        $thisuser->polizze="TEST00001";          
		$thisuser->sponsor = 'angelio';
		$thisuser->sponsor_id = '1';
		$thisuser->sponsor_first_name = 'ANGELIO';
		$thisuser->sponsor_last_name = 'Admin';
		$thisuser->upline = 'angelio';
		$thisuser->upline_id = '1';
		$thisuser->upline_first_name = 'ANGELIO';
		$thisuser->upline_last_name = 'Admin';	
		$thisuser->bonuslevel = 1;
        $thisuser->created = '2016-01-01 12:00:00';
		// Ablaufdaten holen
		$thisuser->status = angelio_is_user_active($thisuser);
		
		return $thisuser;
	}

// Member holen
	db_set_active('angelio_daten');
	$query = db_select('tbl_Kunden_Online', 'm');
	$query
		->fields('m')
  		->condition('m.strUsername_O', $username, '=')
  		->range(0, 1);
	$result = $query->execute();
	db_set_active();
	
	foreach ($result as $record) {    
		$thisuser = new stdClass();
		$thisuser->member_id=$record->KundenID_online;
		$thisuser->username=$record->strUsername_O;
		$thisuser->titel=$record->strTitel_O;		
		$thisuser->first_name=$record->strVName_O;
		$thisuser->last_name=$record->strNName_O;
		$thisuser->street=$record->strAnschrift_O;
		$thisuser->postal=$record->strPLZ_O;
		$thisuser->city=$record->strOrt_O;
		$thisuser->country=$record->strLand_O;
		$thisuser->phone=$record->strTelefon_O;
		$thisuser->email=$record->strEmail_O;
		$thisuser->iban=$record->strIban_O;
        $thisuser->bic=$record->strBic_O;
        $thisuser->payment=$record->Zahlungsintervall_O;
        $thisuser->birthday=$record->datGeburt_O;
        $thisuser->job=$record->strBeruf_O;
        $thisuser->polizze=$record->Polizzennummer_O;
		$thisuser->sponsor_id = $record->ReferrerID_O;
		$thisuser->upline_id = $record->SponsorID_O;	
		$thisuser->bonuslevel = $record->bonuslevel;
        $thisuser->created = $record->datAnlageInternet_O;
	}


 // Sponsor holen:
 	if (isset($thisuser) && ($thisuser->member_id > 1)) {

	 	db_set_active('angelio_daten');
	 	$query = db_select('tbl_Kunden_Online', 'm');
		$query
			->fields('m')
	  		->condition('m.KundenID_online', $thisuser->sponsor_id, '=')
	  		->range(0, 1);
		$result = $query->execute();
	
		db_set_active();
	
		foreach ($result as $record) {
	  		$sponsor = $record;
		}
		
		$thisuser->sponsor = $sponsor->strUsername_O;
		$thisuser->sponsor_first_name = $sponsor->strVName_O;
		$thisuser->sponsor_last_name = $sponsor->strNName_O;
		$thisuser->sponsor_bonuslevel = $sponsor->bonuslevel;
	
	} else { // der Admin
		$thisuser->sponsor = 'angelio';
		$thisuser->sponsor_id = '1';
		$thisuser->sponsor_first_name = 'ANGELIO';
		$thisuser->sponsor_last_name = 'Admin';
		$thisuser->sponsor_bonuslevel = 5;
	}

 // Upline holen
 
  	if ($thisuser->member_id > 1) { // nicht der Admin
	 	db_set_active('angelio_daten');
	 	$query = db_select('tbl_Kunden_Online', 'm');
		$query
			->fields('m')
	  		->condition('m.KundenID_online', $thisuser->upline_id, '=')
			->condition('m.SponsorID_O','0','>')
	  		->range(0, 1);
		$result = $query->execute();
		if ($result->rowCount()) {	
			foreach ($result as $record) {
		  		$upline = $record;
			}		
			$thisuser->upline = $upline->strUsername_O;
			$thisuser->upline_first_name = $upline->strVName_O;
			$thisuser->upline_last_name = $upline->strNName_O;
			$thisuser->upline_bonuslevel = $upline->bonuslevel;
		} else { // noch nicht platzert
			$thisuser->upline = '';
			$thisuser->upline_id = -1;
			$thisuser->upline_first_name = '';
			$thisuser->upline_last_name = '';
			$thisuser->upline_bonuslevel = 0;			
		}
		db_set_active();	
	} else { // der Admin
		$thisuser->upline = 'angelio';
		$thisuser->upline_id = '1';
		$thisuser->upline_first_name = 'angelio';
		$thisuser->upline_last_name = 'Verein';
		$thisuser->upline_bonuslevel = 5;
	}

	// Ablaufdaten holen
	$thisuser->status = angelio_is_user_active($thisuser);

	return $thisuser;
}


function angelio_is_user_active(&$thisuser) {
	
	// alle mal weiß
	$thisuser->status = "white";
	return "white";
	
	db_set_active('angelio_daten');

	$sql = "SELECT DATE(date_time) from payments where member_id = " . $thisuser->member_id . " ORDER BY date_time DESC LIMIT 1";
	$payments = db_query($sql)->fetchCol();
		

	if (!$payments) {
		$thisuser->last_payment = "No payment made";
		$thisuser->expiration_date = "No payment made";
		$thisuser->tolerance_date = "No payment made";
		$thisuser->tolerance_over_date = "No payment made";			
		db_set_active();
		return "red";
	}
	$last_payment = $payments[0];
	
	$sql = "SELECT the_key, the_val FROM boucado_settings WHERE the_key IN ('PayInterval','PayTolerance','PayToleranceOver')";
	$tolerance = db_query($sql)->fetchAllKeyed();
	$payment_interval = $tolerance['PayInterval'];
	$tolerance_days = $tolerance['PayTolerance'];;
	$tolerance_over_days = $tolerance['PayToleranceOver'];

	db_set_active();

	$last_payment_date= new DateTime($last_payment);
	$last_payment_date_string = $last_payment_date->format('d.m.Y');
	
	$last_payment_date->add(new DateInterval("P" . $payment_interval . "D"));
	$expiration_date_string = $last_payment_date->format('d.m.Y');
	
	$last_payment_date->add(new DateInterval("P" . $tolerance_days . "D"));
	$tolerance_date_string = $last_payment_date->format('d.m.Y');	
		
	$last_payment_date->add(new DateInterval("P" . $tolerance_over_days . "D"));
	$tolerance_over_date_string = $last_payment_date->format('d.m.Y');
			
	$today = new DateTime(date(''));
	
	$expiration_date = new DateTime($expiration_date_string);
	$expiration_date_diff = $today->diff($expiration_date);
	
	$is_expired = (int)$expiration_date_diff->format("%r%a");
	
	$tolerance_date = new DateTime($tolerance_date_string);
	$tolerance_date_diff = $today->diff($tolerance_date);
	
	$is_in_tolerance = (int)$tolerance_date_diff->format("%r%a");
	
	$tolerance_over_date = new DateTime($tolerance_over_date_string);
	$tolerance_over_date_diff = $today->diff($tolerance_over_date);
	
	$is_outof_tolerance = (int)$tolerance_over_date_diff->format("%r%a");

	$thisuser->last_payment = $last_payment_date_string;
	$thisuser->expiration_date = $expiration_date_string;
	$thisuser->tolerance_date = $tolerance_date_string;
	$thisuser->tolerance_over_date = $tolerance_over_date_string;
	
	if ($is_outof_tolerance <0) {
		$thisuser->status = "red";
		return "red";
	} else 
		if (($is_outof_tolerance >= 0) && ($is_in_tolerance <= 0)) {
			$thisuser->status = "yellow";
			return "yellow";
		} else 
			if (($is_in_tolerance >= 0) && ($is_expired <= 0)) {
				$thisuser->status = "green";
				return "green";
			} else {
				$thisuser->status = "white";
				return "white";
			}
}


function angelio_mydownline($uid) {
global $user;

	if($uid!='') {
		$userdata = angelio_get_userobject($uid);
	} else {
		$uid = $user->name;
		$userdata = angelio_get_userobject($uid);
	}	
	
	drupal_set_title('Frontlines von ' . $userdata->first_name);
	$output = "<p>Die Genealogie ist die tatsächlich gesponserte, nicht in die 3x9 Matrix gepresste Downline.</p>";
	
	db_set_active('angelio_daten');
	$sql = "SELECT KundenID_online, strUsername_O, strVName_O, strNName_O, strEmail_O, strTelefon_O, ysnInaktiv FROM {tbl_Kunden_Online} WHERE KundenID_online=" . $userdata->sponsor_id;
	$row = db_query($sql)->fetchAssoc();  
	
	$output .= "<hr><h3>Dein Sponsor</h3>";
	$output .= '<table class="tblDownline"><tr><th class="tblDownlineUName">Benutzername</th><th class="tblDownlineVName">Vorname</th><th class="tblDownlineNName">Nachname</th><th class="strEmail_O">E-Mail</th><th class="strTelefon_O">Telefon</th><th class="strTelefon_O">Aktiv</th><tr>';
	$aktiv = ($row['ysnInaktiv'] == 0) ? 'Ja' : 'Nein';
	if (user_access('access all downlines')) {
		$output .= '<tr><td <td class="tblDownlineUName"><a href="/downline/' . $row['KundenID_online'] . '">' . $row['strUsername_O'] . '</a></td><td class="tblDownlineVName">' . $row['strVName_O'] . '</td><td class="tblDownlineVName">' . $row['strNName_O'] . '</td><td class="tblDownlineEmail">' . $row['strEmail_O'] . '</td><td class="tblDownlineTelefon">' . $row['strTelefon_O'] . '</td><td class="tblDownlineAktiv">' . $aktiv . '</td></tr>';
	} else {
		$output .= '<tr><td <td class="tblDownlineUName">' . $row['strUsername_O'] . '</td><td class="tblDownlineVName">' . $row['strVName_O'] . '</td><td class="tblDownlineVName">' . $row['strNName_O'] . '</td><td class="tblDownlineEmail">' . $row['strEmail_O'] . '</td><td class="tblDownlineTelefon">' . $row['strTelefon_O'] . '</td><td class="tblDownlineAktiv">' . $aktiv . '</td></tr>';
	}
	$output .= '</table>';	
	
	$sql = "SELECT KundenID_online, strUsername_O, strVName_O, strNName_O, strEmail_O, strTelefon_O, ysnInaktiv FROM tbl_Kunden_Online WHERE ReferrerID_O=" . $userdata->member_id;
	$result = db_query($sql);
	
	$output .= "<hr><h3>Frontlines</h3>";
	if ($result) {
  		$output .= '<p>Anzahl Frontlines: ' . $result->rowCount() . "</p>";
	} else {
		db_set_active();
		return $output . '<p>Sie haben noch keine Downline...</p>';
	}
	
	$output .= '<table class="tblDownline"><tr><th class="tblDownlineUName">Benutzername</th><th class="tblDownlineVName">Vorname</th><th class="tblDownlineNName">Nachname</th><th class="strEmail_O">E-Mail</th><th class="strTelefon_O">Telefon</th><th class="strTelefon_O">Aktiv</th><tr>';

	while ($row = $result->fetchAssoc()) {
		$aktiv = ($row['ysnInaktiv'] == 0) ? 'Ja' : 'Nein';		
		if (user_access('access all downlines')) {
			$output .= '<tr><td class="tblDownlineUName"><a href="/downline/' . $row['KundenID_online'] . '">' . $row['strUsername_O'] . '</a></td><td class="tblDownlineVName">' . $row['strVName_O'] . '</td><td class="tblDownlineVName">' . $row['strNName_O'] . '</td><td class="tblDownlineEmail">' . $row['strEmail_O'] . '</td><td class="tblDownlineTelefon">' . $row['strTelefon_O'] . '</td><td class="tblDownlineAktiv">' . $aktiv . '</td></tr>';
		} else {
			$output .= '<tr><td class="tblDownlineUName">' . $row['strUsername_O'] . '</td><td class="tblDownlineVName">' . $row['strVName_O'] . '</td><td class="tblDownlineNName">' . $row['strNName_O'] . '</td><td class="tblDownlineEmail">' . $row['strEmail_O'] . '</td><td class="tblDownlineTelefon">' . $row['strTelefon_O'] . '</td><td class="tblDownlineAktiv">' . $aktiv . '</td></tr>';
		}
	} 
	$output .= '</table>';
	
	db_set_active();

	/*
	$output .= "<hr><h3>Struktur</h3>";	
		
	$statistik = array();
	$bonuslevels = array('FREE'=>0, 'BRONCE'=>0, 'SILVER'=>0, 'GOLD'=>0,'PLATIN'=>0);
	
	$tree = angelio_downline_tree($statistik, $bonuslevels, $userdata->member_id, $userdata->member_id,1,false,9);
	
	$levels = array('1' => 0, '2' => 0, '3' => 0, '4' => 0, '5' => 0, '6' => 0, '7' => 0, '8' => 0, '9' => 0);
	$gesamt = 0;
	
	foreach ($statistik as $level) {
		$levels[$level['level']] = $levels[$level['level']] + $level['count'];  
		$gesamt += $level['count']; 
	}
	
	
	for ($i = 1; $i < 10; $i++) {
		$output .= "Level " . $i . ": " . $levels[$i] . "<br>";
	}
	$output .= "<p><b>" . t("Total") . ": ". $gesamt . "</b></p>";

	$output .= "<h3>Bonuslevels:</h3>";	
	$output .= "BRONCE: " . $bonuslevels['BRONCE'] . "<br>";
	$output .= "SILVER: " . $bonuslevels['SILVER'] . "<br>";
	$output .= "GOLD: " . $bonuslevels['GOLD'] . "<br>";
	$output .= "<br><hr><br>";
	*/
/*		
	$output .= $tree;
	
	$output .= '<hr><h3>Legende:</h3>';
	$output .= '<span class="status-white">&nbsp;1&nbsp;</span><span class="level1 stufe2 BRONCE" style="padding-left:20px;">User 1 (id: 210) Vorname </span>: gelb: Frontline<br>';
	$output .= '<span class="status-white">&nbsp;2&nbsp;</span><span class="level2 stufe2 BRONCE" style="padding-left:40px;">User 2 (id: 214) Vorname </span>: hellgrau: 2. Ebene<br>';
	$output .= '<span class="status-white">&nbsp;3&nbsp;</span><span class="level3 stufe3 BRONCE" style="padding-left:60px;">User 3 (id: 227) Vorname </span>: grauer: 3. Ebene (usw.)<br>';
	$output .= '<span class="status-white">&nbsp;4&nbsp;</span><span class="level4 stufe4 BRONCE" style="padding-left:80px;">User 4 (id: 227) Vorname </span>: dunkelgrauer: 4. Ebene (usw.)<br>';	
	$output .= '<span class="status-white">&nbsp;2&nbsp;</span><span class="level2 stufe2 eigen BRONCE" style="padding-left:40px;">User 5 (id: 230) Vorname </span>: eingerahmt: selber gesponsert<br>';
*/ 
	return $output;
}

function angelio_mymatrix($uid) {
global $user;

	if($uid!='') {
		$userdata = angelio_get_userobject($uid);
	} else {
		$uid = $user->name;
		$userdata = angelio_get_userobject($uid);
	}	
	
	drupal_set_title('3x9 Matrix von ' . $userdata->first_name);
	$output ="";
	
	db_set_active('angelio_daten');
	$sql = "SELECT KundenID_online, strUsername_O, strVName_O, strNName_O, strEmail_O, strTelefon_O, ysnInaktiv FROM {tbl_Kunden_Online} WHERE KundenID_online=" . $userdata->sponsor_id;
	$row = db_query($sql)->fetchAssoc();  
	
	$output .= "<hr><h3>Dein Sponsor</h3>";
	$output .= '<table class="tblDownline"><tr><th class="tblDownlineUName">Benutzername</th><th class="tblDownlineVName">Vorname</th><th class="tblDownlineNName">Nachname</th><th class="strEmail_O">E-Mail</th><th class="strTelefon_O">Telefon</th><th class="strTelefon_O">Aktiv</th><tr>';
	$aktiv = ($row['ysnInaktiv'] == 0) ? 'Ja' : 'Nein';
	if (user_access('access all downlines')) {
		$output .= '<tr><td <td class="tblDownlineUName"><a href="/downline/' . $row['KundenID_online'] . '">' . $row['strUsername_O'] . '</a></td><td class="tblDownlineVName">' . $row['strVName_O'] . '</td><td class="tblDownlineVName">' . $row['strNName_O'] . '</td><td class="tblDownlineEmail">' . $row['strEmail_O'] . '</td><td class="tblDownlineTelefon">' . $row['strTelefon_O'] . '</td><td class="tblDownlineAktiv">' . $aktiv . '</td></tr>';
	} else {
		$output .= '<tr><td <td class="tblDownlineUName">' . $row['strUsername_O'] . '</td><td class="tblDownlineVName">' . $row['strVName_O'] . '</td><td class="tblDownlineVName">' . $row['strNName_O'] . '</td><td class="tblDownlineEmail">' . $row['strEmail_O'] . '</td><td class="tblDownlineTelefon">' . $row['strTelefon_O'] . '</td><td class="tblDownlineAktiv">' . $aktiv . '</td></tr>';
	}
	$output .= '</table>';	
	
	$sql = "SELECT KundenID_online, strUsername_O, strVName_O, strNName_O, strEmail_O, strTelefon_O, ysnInaktiv FROM {tbl_Kunden_Online} WHERE KundenID_online=" . $userdata->upline_id;
	$row = db_query($sql)->fetchAssoc();  	
	$output .= "<hr><h3>Deine 3x9 Matrix Upline</h3>";
	$output .= '<table class="tblDownline"><tr><th class="tblDownlineUName">Benutzername</th><th class="tblDownlineVName">Vorname</th><th class="tblDownlineNName">Nachname</th><th class="strEmail_O">E-Mail</th><th class="strTelefon_O">Telefon</th><th class="strTelefon_O">Aktiv</th><tr>';
	$aktiv = ($row['ysnInaktiv'] == 0) ? 'Ja' : 'Nein';
	if (user_access('access all downlines')) {
		$output .= '<tr><td <td class="tblDownlineUName"><a href="/downline/' . $row['KundenID_online'] . '">' . $row['strUsername_O'] . '</a></td><td class="tblDownlineVName">' . $row['strVName_O'] . '</td><td class="tblDownlineVName">' . $row['strNName_O'] . '</td><td class="tblDownlineEmail">' . $row['strEmail_O'] . '</td><td class="tblDownlineTelefon">' . $row['strTelefon_O'] . '</td><td class="tblDownlineAktiv">' . $aktiv . '</td></tr>';
	} else {
		$output .= '<tr><td <td class="tblDownlineUName">' . $row['strUsername_O'] . '</td><td class="tblDownlineVName">' . $row['strVName_O'] . '</td><td class="tblDownlineVName">' . $row['strNName_O'] . '</td><td class="tblDownlineEmail">' . $row['strEmail_O'] . '</td><td class="tblDownlineTelefon">' . $row['strTelefon_O'] . '</td><td class="tblDownlineAktiv">' . $aktiv . '</td></tr>';
	}
	$output .= '</table>'; 
		
	$sql = "SELECT KundenID_online, strUsername_O, strVName_O, strNName_O, strEmail_O, strTelefon_O, ysnInaktiv FROM tbl_Kunden_Online WHERE SponsorID_O=" . $userdata->member_id;
	$result = db_query($sql);
	
	$output .= "<hr><h3>Frontlines</h3>";
	if ($result) {
  		$output .= '<p>Anzahl Frontlines: ' . $result->rowCount() . "</p>";
	} else {
		db_set_active();
		return $output . '<p>Sie haben noch keine Downline...</p>';
	}
	
	$output .= '<table class="tblDownline"><tr><th class="tblDownlineUName">Benutzername</th><th class="tblDownlineVName">Vorname</th><th class="tblDownlineNName">Nachname</th><th class="strEmail_O">E-Mail</th><th class="strTelefon_O">Telefon</th><th class="strTelefon_O">Aktiv</th><tr>';

	while ($row = $result->fetchAssoc()) {
		$aktiv = ($row['ysnInaktiv'] == 0) ? 'Ja' : 'Nein';		
		if (user_access('access all downlines')) {
			$output .= '<tr><td class="tblDownlineUName"><a href="/downline/' . $row['KundenID_online'] . '">' . $row['strUsername_O'] . '</a></td><td class="tblDownlineVName">' . $row['strVName_O'] . '</td><td class="tblDownlineVName">' . $row['strNName_O'] . '</td><td class="tblDownlineEmail">' . $row['strEmail_O'] . '</td><td class="tblDownlineTelefon">' . $row['strTelefon_O'] . '</td><td class="tblDownlineAktiv">' . $aktiv . '</td></tr>';
		} else {
			$output .= '<tr><td class="tblDownlineUName">' . $row['strUsername_O'] . '</td><td class="tblDownlineVName">' . $row['strVName_O'] . '</td><td class="tblDownlineNName">' . $row['strNName_O'] . '</td><td class="tblDownlineEmail">' . $row['strEmail_O'] . '</td><td class="tblDownlineTelefon">' . $row['strTelefon_O'] . '</td><td class="tblDownlineAktiv">' . $aktiv . '</td></tr>';
		}
	} 
	$output .= '</table>';
	
	db_set_active();

	$output .= "<hr><h3>Struktur</h3>";	
	
		// Bis zu welcher Tiefe bekommt der Empfänger den Bonus?
	db_set_active('angelio_daten');
	$sql = "SELECT title, depth FROM tbl_Kunden_Online m, tblBonuslevels b WHERE m.bonuslevel = b.bid AND m.KundenID_online='" . $userdata->member_id . "'";
	$levels = db_query($sql)->fetchAll();
	$title = $levels[0]->title;
	$depth = $levels[0]->depth;
	db_set_active();
	
	$statistik = array();
	$bonuslevels = array('FREE'=>0, 'BRONCE'=>0, 'SILVER'=>0, 'GOLD'=>0,'PLATIN'=>0);
	
	
	$output .= "<h3>Bonuslevel: " . $title . "</h3>";
	$output .= "<h3>" . t("Paylevels: ") . $depth . "</h3>";


	$tree = angelio_downline_tree($statistik, $bonuslevels, $userdata->member_id, $userdata->member_id,1,true,$depth);
	
	$levels = array('1' => 0, '2' => 0, '3' => 0, '4' => 0, '5' => 0, '6' => 0, '7' => 0, '8' => 0, '9' => 0);
	$gesamt = 0;
	
	foreach ($statistik as $level) {
		$levels[$level['level']] = $levels[$level['level']] + $level['count'];  
		$gesamt += $level['count']; 
	}
	
	for ($i = 1; $i < 10; $i++) {
		if ($i > $depth) {
			$output .= "<span style='color:red;'>Level " . $i . ": " . $levels[$i] . "</span><br>";
		} else {
			$output .= "<span>Level " . $i . ": " . $levels[$i] . "</span><br>";
		}
	}
	$output .= "<p><b>" . t("Total") . ": ". $gesamt . "</b></p>";
	
	/*
	$output .= "<h3>Bonuslevels:</h3>";
	$output .= "BRONCE: " . $bonuslevels['BRONCE'] . "<br>";
	$output .= "SILVER: " . $bonuslevels['SILVER'] . "<br>";
	$output .= "GOLD: " . $bonuslevels['GOLD'] . "<br>";
	$output .= "<br><hr><br>";
	*/
		
	$output .= $tree;
	
	$output .= '<hr><h3>Legende:</h3>';
	$output .= '<span class="status-white"> 1 </span><span class="level1 stufe2 BRONCE" style="padding-left:20px;">User 1 (id: 210) Vorname </span>: gelb: Frontline<br>';
	$output .= '<span class="status-white"> 2 </span><span class="level2 stufe2 BRONCE" style="padding-left:40px;">User 2 (id: 214) Vorname </span>: hellgrau: 2. Ebene<br>';
	$output .= '<span class="status-white"> 2 </span><span class="level3 stufe3 BRONCE" style="padding-left:60px;">User 3 (id: 227) Vorname </span>: grauer: 3. Ebene (usw.)<br>';
	$output .= '<span class="status-white"> 2 </span><span class="level4 stufe4 BRONCE" style="padding-left:80px;">User 4 (id: 227) Vorname </span>: dunkelgrauer: 4. Ebene (usw.)<br>';	
	$output .= '<span class="status-white"> 2 </span><span class="level2 stufe2 eigen BRONCE" style="padding-left:40px;">User 5 (id: 230) Vorname </span>: eingerahmt: selber gesponsert<br>';
	
	
	return $output;
}

function angelio_gesamtmatrix($uid) {
global $user;

	if($uid!='') {
		$userdata = angelio_get_userobject($uid);
	} else {
		$uid = $user->name;
		$userdata = angelio_get_userobject($uid);
	}	
	
	drupal_set_title('3x9 Gesamtmatrix');
	$output ="";
	
	$output .= "<hr><h3>Struktur</h3>";	
	
		// Bis zu welcher Tiefe bekommt der Empfänger den Bonus?
	db_set_active('angelio_daten');
	$sql = "SELECT title, depth FROM tbl_Kunden_Online m, tblBonuslevels b WHERE m.bonuslevel = b.bid AND m.KundenID_online='" . $userdata->member_id . "'";
	$levels = db_query($sql)->fetchAll();
	$title = $levels[0]->title;
	db_set_active();
	
	$statistik = array();
	$bonuslevels = array('FREE'=>0, 'BRONCE'=>0, 'SILVER'=>0, 'GOLD'=>0,'PLATIN'=>0);
	
	$tree = angelio_downline_tree($statistik, $bonuslevels, $userdata->member_id, $userdata->member_id,1,true,1000);
		
	//$levels = array('1' => 0, '2' => 0, '3' => 0, '4' => 0, '5' => 0, '6' => 0, '7' => 0, '8' => 0, '9' => 0, '10' => 0, '11'=>0);
	$levels = array();
	$gesamt = 0;
		
	foreach ($statistik as $level) {
		if (!isset($levels[$level['level']])) {
			$levels[$level['level']] = 0;
		}
		$levels[$level['level']] = $levels[$level['level']] + $level['count'];  
		$gesamt += $level['count']; 
	}
	
	$depth = sizeof($levels);
	
	for ($i = 1; $i < $depth+1; $i++) {
		if ($i > $depth) {
			$output .= "<span style='color:red;'>Level " . $i . ": " . $levels[$i] . "</span><br>";
		} else {
			$output .= "<span>Level " . $i . ": " . $levels[$i] . "</span><br>";
		}
	}
	$output .= "<p><b>" . t("Total") . ": ". $gesamt . "</b></p>";

	$output .= $tree;
	
	return $output;
}

function angelio_downline_tree(&$statistik, &$bonuslevels, $uid, $sponsor_id, $level=1, $matrix=true, $depth) {
	if ($level>$depth) {return;} // Abbruch nach 9 Leveln
	// if ($sponsor_id==0) {return;} // Abbruch bei inaktiven Usern
	
	db_set_active('angelio_daten');

	if ($matrix) { // 3x9 Matrix oder richtige Downline anzeigen?
		$sql = "SELECT KundenID_online as member_id, bonuslevel, strUsername_O as username, strVName_O as first_name, strNName_O as last_name, ReferrerID_O as sponsor_id, SponsorID_O as host_id FROM {tbl_Kunden_Online} WHERE SponsorID_O=" . $uid . " ORDER by KundenID_online";
	} else {
		$sql = "SELECT KundenID_online as member_id, bonuslevel, strUsername_O as username, strVName_O as first_name, strNName_O as last_name, ReferrerID_O as sponsor_id, SponsorID_O as host_id FROM {tbl_Kunden_Online} WHERE ReferrerID_O=" . $uid . " ORDER by KundenID_online";		
	}
	$result = db_query($sql);
	db_set_active();

	$output = "";
	$eigen = "";
	$depthclass="";
	if ($level > $depth) {
		$depthclass=" depth";
	}
	if ($result->rowCount()) {
		$count = $result->rowCount();
		$statistik[] = array('level' => $level, 'count' => $count);
		foreach ($result as $row) {
			if ($sponsor_id == $row->sponsor_id) {$eigen = " eigen"; }
			$member_status = angelio_is_user_active($row);
			db_set_active('angelio_daten');
			$sql = "SELECT title, depth FROM tbl_Kunden_Online m, tblBonuslevels b WHERE m.bonuslevel = b.bid AND m.KundenID_online='" . $row->member_id . "'";
			$levels = db_query($sql)->fetchAll();
			$bonustitle = $levels[0]->title;
			$bonuslevels[$bonustitle] = $bonuslevels[$bonustitle] + 1; 
			db_set_active();
			$output .= '<span class="status-' . $member_status . '">&nbsp;' .$level . '&nbsp;</span><span class="level' . $level . ' stufe' . $row->bonuslevel . $eigen . $depthclass . ' ' . $bonustitle . '" style="padding-left:' . $level*20 . 'px;">' . $row->username . ' (id: ' . $row->member_id .  ') ' . $row->first_name . '&nbsp;</span><br>' . angelio_downline_tree($statistik, $bonuslevels, $row->member_id, $sponsor_id, $level+1,$matrix,$depth);
  		}
 		db_set_active();
		
		return $output;
	} else {
		db_set_active();
		return "";
	}
}

function angelio_inMatrix($member_id, $sponsor_id) {

	$nextone = array();
	$nextLevelIds = getNextLevelIds($nextone, $sponsor_id);
	usort($nextone, 'compareIds'); // zuerst von links nach rechts sortieren
	usort($nextone, 'compareCount');  // dann nach dem wenigsten downlines
	$host_id = $nextone[0]['uid'];
	
	db_set_active('angelio_daten');
	// Dem Member die host_id eintragen
	db_update('tbl_Kunden_Online')
		->fields(array('SponsorID_O' => $host_id))
		->condition('KundenID_online', $member_id, '=')
		->execute();

	// Dem Host das Datum eintragen
	db_update('tbl_Kunden_Online')
		->fields(array('datLast_hosted' => date("Y-m-d H:i:s", time())))
		->condition('KundenID_online',$host_id,'=')
		->execute();
	
	db_set_active();	
	
	update_upline($member_id);

}

function getFirstLevelCount($id) {
	db_set_active('angelio_daten');
	$result = db_query("SELECT count(*) FROM {tbl_Kunden_Online} WHERE SponsorID_O = '" . $id . "'")->fetchCol();
	db_set_active();
	return $result[0];
}

function getSecondLevelCount($id){
	db_set_active('angelio_daten');
	
	// mal alle direkten downlines holen:
	$result = db_query("SELECT KundenID_online as member_id FROM {tbl_Kunden_Online} WHERE SponsorID_O = '" . $id . "' order by KundenID_online");

	if ($result->rowCount()) {
		$ids_anz = array();
		$anzahlen = array();
		$host_ids = '';
		$i = 0;
		$max_anz = 0;
		$min_anz = 0;
		foreach ($result as $row) {
			// wie viele downlines haben die in der ersten Reihen schon?
			$result1 = db_query("SELECT SponsorID_O as host_id, count(*) as anz FROM {tbl_Kunden_Online} WHERE SponsorID_O = '" . $row->member_id . "' group by SponsorID_O order by count(*), SponsorID_O");
			if ($result1->rowCount()) { // wenn überhaupt, dann
				$anz = $result1->fetchCol(1);
				$host_id = $result1->fetchCol(0);
				$ids_anz[] = array('host_id' => $row->member_id, 'anz' => $anz[0]);
				$anzahlen[] = $anz[0];
				$host_ids .= $row->member_id . ',';
				$i++;
			} else {
				$anzahlen[] = 0;
				$ids_anz[] = array('host_id' => $row->member_id, 'anz' => 0);
			}
		}
		if ($i > 0) {
			$max_anz = max($anzahlen);
			$min_anz = min($anzahlen);
			$host_ids = substr($host_ids,0,strlen($host_ids)-1);
			usort($ids_anz, 'compareHostIds'); // host_ids aufsteigend sortieren		
			usort($ids_anz, 'compareHosts'); // nach Anzahl an downlines sortieren, absteigend
		}
	} else {
		$ids_anz = NULL;
		$min_anz = 0;
		$max_anz = 0;
	}
	
	db_set_active();
	return array('ids_anz' => $ids_anz, 'host_ids' => $host_ids, 'max_anz' => $max_anz, 'min_anz' => $min_anz);
}

function getNextLevelIds(&$nextone, $sponsor_id) {
	
	$first_level_count = getFirstLevelCount($sponsor_id);
	
	if ($first_level_count < 3) { // erste Reihe ist noch nicht voll
		$nextone[] = array('uid' => $sponsor_id);
	} else {
	
		$second_level_counts = getSecondLevelCount($sponsor_id);
		if ($second_level_counts['min_anz'] < 3) { // zweite Reihe ist noch nicht voll
			$nextone[] = array('uid' => $second_level_counts['ids_anz'][0]['host_id']); // den, mit den wenigsten zurück geben
		} else { // zweite Reihe ist voll, wer ist der Nächste? Wer hat noch nicht, wer will nochmal?
			db_set_active('angelio_daten');	
			// wer sind die 3 Kandidaten?
			$result = db_query("SELECT KundenID_online as member_id FROM {tbl_Kunden_Online} WHERE KundenID_online IN (" . $second_level_counts['host_ids'] . ") order by datLast_hosted asc, KundenID_online");
			$geschafft = 0;
			foreach ($result as $row) {
				$next_id = $result->fetchCol();
				$first_level_count = getFirstLevelCount($next_id[0]);
				if ($first_level_count < 3) {
					$nextone[] = array('uid' => $next_id['0']);
					$geschafft = 1;
					db_set_active();
					return;
				}
			}
			if (!$geschafft) {
				db_set_active('angelio_daten');
				$result = db_query("SELECT KundenID_online as member_id FROM {tbl_Kunden_Online} WHERE KundenID_online IN (" . $second_level_counts['host_ids'] . ") ORDER by rand() LIMIT 1");
				$next_id = $result->fetchCol();
				db_set_active();
				getNextLevelIds($nextone, $next_id[0]);				
			}
			
	 	}
	}
}

// Upline rekursiv bis zur 9. Ebene aktualisieren
function update_upline($member_id, $level = 1) {
	
	if (($member_id == "0") || ($level > 9)) {
		return; 
	} else {
		db_set_active('angelio_daten');
		$result = db_query("SELECT SponsorID_O as host_id FROM {tbl_Kunden_Online} WHERE KundenID_online = " . $member_id);
		$host = $result->fetchCol();
		$host_id = $host[0];		
		db_update('tbl_Kunden_Online')
		->fields(array('datLast_downline' => date("Y-m-d H:i:s", time())))
		->condition('KundenID_online',$host_id,'=')
		->execute();
		db_set_active();
		update_upline($host_id, $level+1);		
	}
}

function compareCount($a, $b)
{
  return $a['count'] - $b['count'];
}

function compareIds($a, $b)
{
  return $b['end'] - $a['end'];
}

function compareHosts($a, $b)
{
  return $a['anz'] - $b['anz'];
}

function compareHostIds($a, $b)
{
  return $b['host_id'] - $a['host_id'];
}


function angelio_resettests() {
	db_set_active('angelio_daten');	
	$result = db_query("DELETE FROM {tbl_Kunden_Online} WHERE ysnIsTest = 1 OR KundenID_online=0");
	db_set_active();
	$statistik = array();
	$bonuslevels = array();
	drupal_set_message("Testdaten gelöscht.");
	drupal_goto("admin/angelio/testdaten");
	return;
} 

function new_TestMember($sponsor_id, $datum) {
	db_set_active('angelio_daten');
	$result = db_query("SELECT Vorname FROM {tblNamen} ORDER BY rand() LIMIT 1;")->fetchCol();
	$vorname = $result;
	$result = db_query("SELECT Nachname FROM {tblNamen} ORDER BY rand() LIMIT 1;")->fetchCol();
	$nachname = $result;
	$username = $sponsor_id . "_" . rand(0,9999);
	$email = $username . "@angelio.at";

	$result = db_query("SELECT * FROM {tbl_Kunden_Online} order by KundenID_online desc limit 1")->fetchAssoc();
	
	if ($result['ysnIsTest'] == 1) {
		$member_id = $result['KundenID_online'] + 1;
	} else {
		$member_id = $result['KundenID_online'] + 90001;
	}
	
	$Polizzennummer_O = date("ym") . sprintf("%07d", $member_id) . "0101";
	$zahlunsintervall = rand(1,4); 
	if ($zahlunsintervall == 3) {$zahlunsintervall = 12;}
	
	if ($datum == "") {
		$datAnlage = date("Y-m-d H:i:s", time());
	} else {
		$datAnlage = $datum . " 00:00:00";
	}
	
	db_insert('tbl_Kunden_Online')
	->fields(array('KundenID_online','ReferrerID_O','bonuslevel','strUsername_O','strVName_O','strNName_O','strEmail_O','datAnlageInternet_O','ysnIsTest','Polizzennummer_O','Zahlungsintervall_O'))
	->values(array(
		'KundenID_online' => $member_id,
		'ReferrerID_O' => $sponsor_id,
		'bonuslevel' => 2,
		'strUsername_O' => $username,
		'strVName_O' => $vorname[0],
		'strNName_O' => $nachname[0],
		'strEmail_O' => $email,
		'datAnlageInternet_O' => $datAnlage,
		'ysnIsTest' => 1,
		'Polizzennummer_O' => $Polizzennummer_O,
		'Zahlungsintervall_O' => $zahlunsintervall
	))
	->execute();
	db_set_active();
	return $member_id;
}

 function angelio_TestInsert($sponsor_id, $anz, $datum=""){
	for ($i=1; $i <= $anz; $i++) { 	
		if ($sponsor_id == -1) { // Sponsor aus DB holen, sonst den angegebenen $sponsor verwenden
			db_set_active('angelio_daten');
			$result = db_query("SELECT KundenID_online as member_id FROM {tbl_Kunden_Online} ORDER BY rand() LIMIT 1;");
			$sponsor = $result->fetchCol();
			$next_id = $sponsor[0];
			db_set_active();
		} else {
			$next_id = $sponsor_id;
		}
		$member_id = new_TestMember($next_id, $datum);

		angelio_inMatrix($member_id, $next_id);
	}

	$statistik = array();
	$bonuslevels = array('FREE'=>0, 'BRONCE'=>0, 'SILVER'=>0, 'GOLD'=>0,'PLATIN'=>0);
	$output = angelio_downline_tree($statistik, $bonuslevels, 1, 1,1,true,9);
	
	return $output;
}
 
function angelio_vertraege($uid) {
global $user;
	
	if($uid!='0') {
		$userdata = angelio_get_userdata($uid);
	} else {
		$uid = $user->uid;
		$userdata = angelio_get_userdata($uid);
	}

	drupal_set_title('Verträge von ' . $userdata['strVName_O']);
	
	db_set_active('angelio_daten');
	
	$output = "<hr><br><h3>Meine Vertr&auml;ge:</h3>";	
	
	$sql = "SELECT * FROM {tbl_Vertraege_online} vt LEFT JOIN {tbl_Produkte_Online} pr ON vt.ProduktID=pr.ProduktID WHERE ysnStorniert='0' AND KundenID=" . $uid;
	$result = db_query($sql);	

	if ($result->rowCount()) {
  		$output .= '<table id="tblCommissionVertraege"><tr><th class="tblCommissionCol1">Produkt</th><th class="tblCommissionCol2">Versicherungsbestätigung</th><th class="tblCommissionCol3">Abschluss</th><th class="tblCommissionCol4">Vertrag</th><tr>';
		while ($row = $result->fetchAssoc()) {
			// wurde die Polizze schon erweitert?
			$sql = "SELECT * FROM {tbl_Vertraege_Status} WHERE Polizzennummer='" . $row['Polizzennummer'] . "' AND datErweitert<>'0'";
			$erweitert = db_query($sql)->fetchAssoc();			
			if (!is_null($erweitert['Polizzennummer'])) {
			$output .= '<tr><td valign="top" class="tblVertraegeCol">' . $row['strProduktbezeichnung'] . '</td><td valign="top" class="tblVertraegeCol"><a href="/polizze/' . $uid . '/' . $row['Polizzennummer'] . '">' . $row['Polizzennummer'] . '</a></td><td valign="top" class="tblVertraegeCol">' . fdate($row["datAbschluss"],"d") . '.' . fdate($row["datAbschluss"],"m") . '.' . fdate($row["datAbschluss"],"Y") . '</td><td><form class="vertrag kuendigen" title="Den Vertrag kündigen..." action="/kuendigen/' . $row['Polizzennummer'] . '" method="post"><input type="hidden" value="' . $row['Polizzennummer'] . '"><input type="submit" value="kündigen..."></form></td></tr>';
			} else {
			$output .= '<tr><td valign="top" class="tblVertraegeCol">' . $row['strProduktbezeichnung'] . '</td><td valign="top" class="tblVertraegeCol"><a href="/polizze/' . $uid . '/' . $row['Polizzennummer'] . '">' . $row['Polizzennummer'] . '</a></td><td valign="top" class="tblVertraegeCol">' . fdate($row["datAbschluss"],"d") . '.' . fdate($row["datAbschluss"],"m") . '.' . fdate($row["datAbschluss"],"Y") . '</td><td><form class="vertrag kuendigen" title="Den Vertrag kündigen..." action="/kuendigen/' . $row['Polizzennummer'] . '" method="post"><input type="hidden" value="' . $row['Polizzennummer'] . '"><input type="submit" value="kündigen..."></form><form class="vertrag erweitern" action="/erweitern/' . $row['Polizzennummer'] . '" method="post"><input type="hidden" value="' . $row['Polizzennummer'] . '"><input type="submit" title="Den Vertrag erweitern..." value="erweitern..."></form></td></tr>';				
			}
		}
		$output .= '</table>';
	} else {
		// $output .= 'Ihre Verträge werden erst generiert und sollten innerhalb von 48 Stunden sichtbar sein.';
		$output .= '<br><a href="/polizze/' . $uid . '/' . $userdata['Polizzennummer_O'] . '">SOFORTPOLIZZE HIER DRUCKEN...</a>';
		$output .= '<br>Die dauerhafte Polizze wird in spätestens 48 Stunden hier in Deinem Account erscheinen.';
	}
	
	db_set_active();
			
	$output .= "<hr><br><h3>Meine Dokumente:</h3>";
	$output .= "<table><tr><td class='tblVertraegeCol'>";	
	$output .= "<a href='/downloads/AIG_AUVB_2005_extern.pdf' target='_blank'>AIG Allg. Unfallversicherungsbedingungen (AUVB 2005)</a><br>"; 
	$output .= "<a href='/downloads/AIG_Progressionstabelle.pdf' target='_blank'>AIG Progressionstabelle</a><br>";
	$output .= "<a href='/downloads/Datenschutzrichtlinie.pdf' target='_blank'>Datenschutzrichtlinie</a><br>";
	$output .= "<a href='/downloads/Widerrufsbelehrung.pdf' target='_blank'>Widerrufsbelehrung</a><br>";
	$output .= "<a href='/downloads/AGBangelio.pdf' target='_blank'>Allgemeine Bedingungen der Mitgliederwerbung</a><br>";
		
	$output .= "</td><td align='right'>";
	$output .= "<form id='schadenbutton' action='/schaden'><input type='submit' title='Einen Unfall melden...' value='Einen Unfall melden...'></form>";
	$output .= "</td></tr></table>";	
	
	return $output; 
}
 
function angelio_unfall_polizze($uid,$pid) {
global $user;
	
	db_set_active('angelio_daten');
	$sql="SELECT * FROM {tbl_Vertraege_online} v LEFT JOIN {tbl_Kunden_Online} k on v.KundenID = k.KundenID_online LEFT JOIN {tbl_Produkte_Online} p on v.ProduktID = p.ProduktID WHERE v.Polizzennummer='" . $pid . "'";
	$row = db_query($sql)->fetchAssoc();
	if (!isset($row['KundenID_online'])) {
		$sql="SELECT * FROM {tbl_Kunden_Online} WHERE Polizzennummer_O='" . $pid . "'";
		$row = db_query($sql)->fetchAssoc();
		$row['strProduktbeschreibung'] = 'Unfallversicherung Angelio';
		$row['datAbschluss'] = $row['datAnlageInternet_O'];
		$row['Polizzennummer'] = $row['Polizzennummer_O'];
	} 
	db_set_active();

	drupal_set_title('angelio Versicherungsbestätigung  '. $pid );
		
	return theme('unfall_polizze', array('userdata' => $row));
}


function angelio_preprocess_unfall_polizze(&$variables) {
  // $userdata = $variables;
}

function send_pdf_mit_email($filename, $path) {
// $path ist z.B.: "/printpdf/polizze/" . $userdata['KundenID_online'] ."/" . $userdata['Polizzennummer_O']; 

  module_load_include('inc', 'print_pdf', 'print_pdf.pages');  // require print_pdf.pages.inc

  // set up email
  $recipients[] = "email@example.com";
  $subject = "Your PDF is attached";
  $body = '<p>Your PDF is attached</p>';

  $attachments[] = array(   // attach ticket
    'filecontent' => print_pdf_generate_path($path),  // call the print_pdf function to generate PDF content string
    'filemime' => 'application/pdf',
    'filename' => $filename,
  );

  // send email
  mimemail( $settings['from'], $recipients, $subject, $body, FALSE, array(), drupal_html_to_text(decode_entities($body)), $attachments );
}

function angelio_provision($uid) {
global $user;
	
	if($uid!='0') {
		$userdata = angelio_get_userobject($uid);
	} else {
		$uid = $user->uid;
		$userdata = angelio_get_userobject($uid);
	}


    $date = new DateTime($userdata->created);
    $now = new DateTime();
    $tage = $date->diff($now)->format("%d");
    $monate = $date->diff($now)->format("%m");
    $starttag = $date->format("d.m.Y");
    
	drupal_set_title('Abrechnung von ' . $userdata->first_name);

	$bonuslevel = $userdata->bonuslevel;
	
	db_set_active('angelio_daten');

	$sql = "SELECT sum(intAnzahlKunden) as Kunden, sum(dblLaufend) AS Provision FROM {tbl_stat_Kunden_Downlines} WHERE lngLevel > 0 AND sponsorID=" . $userdata->member_id;
	$row = db_query($sql)->fetchAssoc();
	$summe_kunden = $row['Kunden'];
	$summe_provision = $row['Provision'];

	if ($summe_provision == 0) {
		db_set_active();
		return "<p>Sie haben noch keine Verdienste...</p>";
	}

	$output = "<hr><br><h3>Verdienst nach Ebenen gesamt:</h3>";

	$sql = "SELECT * FROM {tbl_stat_Kunden_Downlines} WHERE lngLevel > 0 AND sponsorID=" . $userdata->member_id;
	
	$result = db_query($sql);
			
	$output .= '<table id="tblCommissionEbenen"><tr><th class="tblCommissionCol1">Level</th><th class="tblCommissionCol2">Anzahl Mitglieder</th><th class="tblCommissionCol3">Laufende Provision</th><tr>';
	while ($row = $result->fetchAssoc()) {
		$output .= '<tr><td class="tblCommissionCol1">' . $row['lngLevel'] . '</td><td class="tblCommissionCol2">' . $row['intAnzahlKunden'] . '</td><td class="tblCommissionCol3">' . number_format((float)$row['dblLaufend'], 2, ',','.')  . '&euro;</td></tr>';
	} 

	$sql = "SELECT sum(intAnzahlKunden) as Kunden, sum(dblLaufend) AS Provision FROM {tbl_stat_Kunden_Downlines} WHERE lngLevel > 0 AND sponsorID=" . $userdata->member_id;
	$row = db_query($sql)->fetchAssoc();
	
	$output .= '<tr><td class="tblCommissionCol1"><b>Summe:</b></td><td class="tblCommissionCol2"><b>' . $summe_kunden . '</b></td><td class="tblCommissionCol3"><b>' . number_format((float)$summe_provision, 2, ',','.')  . '&euro;</b></td></tr>'; 
	$output .= '</table>'; 
	
	$output .= "<hr><br><h3>Entwicklung der Linien:</h3>";

	$sql = "SELECT * FROM {tbl_Kunden_Online} WHERE SponsorID_O=" . $userdata->member_id;
	$result = db_query($sql);
	
	$output .= '<table id="tblCommissionEbenen"><tr><th class="tblCommissionCol1">Frontline</th><th class="tblCommissionCol2">Anzahl Mitglieder (inkl. Frontline)</th><tr>';		
	while ($row = $result->fetchAssoc()) {
		switch ($bonuslevel) {
			case 2:
				$sql = "SELECT sponsorID, sum(intAnzahlKunden) as Kunden, strUsername_O as Kunde FROM {tbl_stat_Kunden_Downlines} kd INNER JOIN {tbl_Kunden_Online} ku ON kd.sponsorID=ku.KundenID_online WHERE kd.lngLevel < 7 AND kd.lngLevel > 0 AND kd.sponsorID=" . $row['KundenID_online'];
				break;
			case 3:
				$sql = "SELECT sponsorID, sum(intAnzahlKunden) as Kunden, strUsername_O as Kunde FROM {tbl_stat_Kunden_Downlines} kd INNER JOIN {tbl_Kunden_Online} ku ON kd.sponsorID=ku.KundenID_online WHERE kd.lngLevel < 8 AND kd.lngLevel > 0 AND kd.sponsorID=" . $row['KundenID_online'];
				break;
			case 4:
				$sql = "SELECT sponsorID, sum(intAnzahlKunden) as Kunden, strUsername_O as Kunde FROM {tbl_stat_Kunden_Downlines} kd INNER JOIN {tbl_Kunden_Online} ku ON kd.sponsorID=ku.KundenID_online WHERE kd.lngLevel < 9 AND kd.lngLevel > 0 AND kd.sponsorID=" . $row['KundenID_online'];
				break;				
		}
		
		$frontline = db_query($sql)->fetchAssoc();
		$kunden = ($frontline['Kunden'] == "") ? '1' : $frontline['Kunden'] + 1;
		if (user_access('access all provisionen')) {
			$output .= '<tr><td class="tblCommissionCol1"><a href="/provision/' . $frontline['sponsorID'] . '">' . $frontline['Kunde'] . '</a></td><td class="tblCommissionCol2">' . $kunden . '</td></tr>';
		} else {
			$output .= '<tr><td class="tblCommissionCol1">' . $frontline['Kunde'] . '</td><td class="tblCommissionCol2">' . $kunden . '</td></tr>';			
		}
	} 

	$output .= '</table>'; 
	
	
	$output .= "<hr><br><h3>Verdienst nach Monaten:</h3>";

		// SELECT strBonusart, datAbrechnungsdatum, sum(dblBetrag) as Betrag FROM `tbl_Konto_online` WHERE SponsorID=62 group by strBonusart, datAbrechnungsdatum order by datAbrechnungsdatum desc
	$sql = "SELECT * FROM {tbl_stat_Provisionsentwicklung_monatlich} WHERE sponsorID=" . $userdata->member_id . " ORDER BY Jahr desc, Monat desc";
	$result = db_query($sql);
		
	$output .= '<table id="tblCommissionMonate"><tr><th class="tblCommissionCol1">Jahr</th><th class="tblCommissionCol2">Monat</th><th class="tblCommissionCol3">Laufende Provision</th><tr>';
	while ($row = $result->fetchAssoc()) {
		$output .= '<tr><td class="tblCommissionCol1">' . $row['Jahr'] . '</td><td class="tblCommissionCol2">' . $row['Monat'] . '</td><td class="tblCommissionCol3">' . number_format((float)$row['Provisionssumme'], 2, ',','.') . '&euro;</td></tr>';
	} 
	$output .= '</table>';
	
	
	$output .= "<hr><br><h3>Provisionen gesamt:</h3>";

	$sql = "SELECT strBonusart, sum(dblBetrag) as Summe FROM {tbl_Konto_online} WHERE datAbrechnungsdatum <= NOW() AND SponsorID=" . $userdata->member_id . " GROUP BY strBonusart ORDER BY strBonusart";
	$result = db_query($sql);
	$gesamt = 0.0;
    $angel = false;
			
           
	$output .= '<table id="tblCommissionMonate"><tr><th class="tblCommissionCol2">Bonusart</th><th class="tblCommissionCol3">Summe Provision</th><tr>';
	while ($row = $result->fetchAssoc()) {
	    if ($row['strBonusart'] == "Angelprovision") {$angel = true;}
	    if ($angel && $row['strBonusart']!="Startprovision") {
		  $output .= '<tr><td class="tblCommissionCol1">' . $row['strBonusart'] . '</td><td class="tblCommissionCol2">' . number_format((float)$row['Summe'], 2, ',','.')  . '&euro;</td></tr>';
		  $gesamt = $gesamt + (float)$row['Summe'];
        } else if(!$angel) {
          $output .= '<tr><td class="tblCommissionCol1">' . $row['strBonusart'] . '</td><td class="tblCommissionCol2">' . number_format((float)$row['Summe'], 2, ',','.')  . '&euro;</td></tr>';
          $gesamt = $gesamt + (float)$row['Summe'];            
        }
	} 
	$output .= '<tr><td class="tblCommissionCol1"><strong>Gesamtprovisionen</strong></td><td class="tblCommissionCol2"><strong>' . number_format($gesamt, 2, ',','.')  . '&euro;</strong></td></tr>';
	$output .= '</table>';
	
    /*
	$output .= '<br><div style="font-size:11px">(<sup>*</sup>)  Startprovision: Sobald Du mindestens 3 Personen innerhalb von 30 Tagen nach Deinem Vereinsbeitritt geworben hast, tritt der Schnellstartbonus in Kraft.
Technisch ist es uns aber nur möglich, 44 Euro anstatt die höhere Startprovision von 88 Euro anzuzeigen. Die Anhebung passiert erst nach der 30-tägigen Zeitspanne inkl. Kündigungsfrist!</div>';
     */

	db_set_active();	
	return $output;
}

function angelio_kontoauszug($uid) {
global $user;
	
	if($uid!='0') {
		$userdata = angelio_get_userobject($uid);
	} else {
		$uid = $user->uid;
		$userdata = angelio_get_userobject($uid);
	}


	drupal_set_title('Kontoauszug von ' . $userdata->first_name);
	
	db_set_active('angelio_daten');

	$output = "<hr><br><h3>Überweisungen:</h3>";
	$output .= "<p style='font-size:11px;'>Sobald Dein offener Saldo mehr als 30€ aufweist, wird eine Überweisung auf Dein Bankkonto durchgeführt.<br>Beachte jedoch die 14-tägige Kündigungsfrist, die zusätzlich verstrichen sein muss.</p>";

	$sql = "SELECT sum(dblBetrag) as Betrag FROM `tbl_Konto_online` WHERE datAbrechnungsdatum <= NOW() AND SponsorID=" . $userdata->member_id;
	$result = db_query($sql)->fetchAssoc();	
	$gesamt = $result['Betrag'];
	
	if ($gesamt == 0) {
		db_set_active();
		return "<p>Sie haben noch keine Kontobewegungen...</p>";
	}
	

	$output .= '<hr><table id="tblCommissionUberweisung"><tr>
		<th class="tblCommissionCol1" style="width:400px;">Offene Provisonen</th>
		<th class="tblCommissionCol1">Betrag</th><th class="tblCommissionCol1">Scheck</th><th class="tblCommissionCol1">Scheck (mit Name)</th></tr>';
		
	$sql = "SELECT sum(dblBetrag) as Betrag FROM tbl_Konto_online WHERE datAusbezahltAm IS NULL AND datAbrechnungsdatum <= NOW()  AND SponsorID=" . $userdata->member_id;
	$result = db_query ($sql)->fetchAssoc();
	$offen = ($result['Betrag'] == "") ? "0" : $result['Betrag'];
	
	$output .= 	'<tr><td class="tblCommissionCol1">Gesamtsumme aller offenen Provisionen</td><td class="tblCommissionCol2" style="text-align:right;">' . number_format((float)$offen, 2, ',','.') . '&euro;</td><td></td><td></td></tr>';
					
	$sql = "SELECT sum(dblBetrag) as Betrag FROM tbl_Konto_online ko JOIN tbl_Kunden_Online ku on ko.KundenID = ku.KundenID_Online WHERE ko.datAusbezahltAm IS NULL AND DATEDIFF(CURDATE(),ku.datAnlageInternet_O) < 15 AND datAbrechnungsdatum <= NOW() AND ko.SponsorID=" . $userdata->member_id;
	$result = db_query ($sql)->fetchAssoc();
	$offen_schwebend = ($result['Betrag'] == "") ? "0" : $result['Betrag'];
	$output .= 	'<tr><td class="tblCommissionCol1">davon noch gesperrt aufgrund Kündigungsfrist</td><td class="tblCommissionCol2" style="text-align:right;">' . number_format((float)$offen_schwebend, 2, ',','.') . '&euro;</td><td></td><td></td></tr>';	
	
	$sql = "SELECT datAusbezahltAm, sum(dblBetrag) as Betrag FROM tbl_Konto_online WHERE NOT (datAusbezahltAm IS NULL) AND datAbrechnungsdatum <= NOW() AND SponsorID=" . $userdata->member_id . " group by datAusbezahltAm order by datAusbezahltAm";
	
	$result = db_query($sql);	

	while ($row = $result->fetchAssoc()) {
		$datum = fdate($row["datAusbezahltAm"],"d") . '.' . fdate($row["datAusbezahltAm"],"m") . '.' . fdate($row["datAusbezahltAm"],"Y");
        $f_betrag = number_format((float)$row['Betrag'], 2, ',','.');
        $i_betrag = intval($row['Betrag']);
        
		$output .= 	'<tr><td class="tblCommissionCol1">Auszahlung am ' . $datum .
		 			'</td><td class="tblCommissionCol2">' . $f_betrag . '&euro;</td>' .
					'<td><a href="/scheck/0/' . $uid . '/'. $i_betrag . '/' . $datum . '" target="_blank"><img width="80" src="/scheck/0/' . $uid . '/'. $i_betrag . '/' . $datum . '"></a></td>' .
					'<td><a href="/scheck/1/' . $uid . '/'. $i_betrag . '/' . $datum . '" target="_blank"><img width="80" src="/scheck/1/' . $uid . '/'. $i_betrag . '/' . $datum . '"></a></td></tr>';
	}
	$output .= 	'<tr><td class="tblCommissionCol1" style="border-top:1px solid #333;">GESAMTVERDIENST' .
		 			'</td><td class="tblCommissionCol2" style="border-top:1px solid #333;text-align:right;">' . number_format((float)$gesamt, 2, ',','.') . '&euro;' .
					'</td><td style="border-top:1px solid #333;" colspan="2"></td></tr>';	
	$output .= '</table>';  
		
			
	$output .= "<hr><br><h3>Provisionen:</h3>";


 	$tblheader = array(
 					array('data'=>'Level','field'=>'lngLevel'),
					array('data'=>'Partner','field'=>'strVName_O'),
					array('data'=>'Produkt','field'=>'strProduktbezeichnung'),					
					array('data'=>'Bonusart','field'=>'strBonusart'),	
					array('data'=>'Betrag','field'=>'dblBetrag'),
					array('data'=>'Abrechnung','field'=>'datAbrechnungsdatum','sort'=>'desc'),
					array('data'=>'Ausbezahlt<sup>*</sup>','field'=>'datAusbezahltAm')
				);
	db_set_active('angelio_daten'); 

	$query = db_select("tbl_Konto_online",'ko')
	->extend('PagerDefault')->limit(50)
	->extend('TableSort')->orderByHeader($tblheader); 		
	$query->leftJoin('tbl_Produkte_Online','pr', 'ko.ProduktID=pr.ProduktID');
	$query->leftJoin('tbl_Kunden_Online','ku', 'ko.KundenID=ku.KundenID_online');
	$query->fields('ko');
	$query->fields('pr');
	$query->fields('ku');
	$query->where('datAbrechnungsdatum <= NOW()');
	$query->condition('ko.SponsorID',$userdata->member_id,'=');
	$query->orderBy('ko.datAbrechnungsdatum', 'DESC')->orderBy('ko.lngLevel', 'ASC');

	
	$result = $query->execute()->fetchAll();

	db_set_active();	
	
	foreach($result as $row) {
		$abrechnung = fdate($row->datAbrechnungsdatum,"d") . '.' . fdate($row->datAbrechnungsdatum,"m") . '.' . fdate($row->datAbrechnungsdatum,"Y");
		if ($row->datAusbezahltAm == "") { $ausbezahlt = "noch offen"; } 
		else {$ausbezahlt = fdate($row->datAusbezahltAm,"d") . '.' . fdate($row->datAusbezahltAm,"m") . '.' . fdate($row->datAusbezahltAm,"Y");}

    $table_rows[] = 
    	array(
			array('data' => $row->lngLevel - 1),
			array('data' => $row->strVName_O),
			array('data' => $row->strProduktbezeichnung),		
			array('data' => $row->strBonusart), 
			array('data' => number_format((float)$row->dblBetrag, 2, ',','.') . '&euro;&nbsp;&nbsp;', 'align' => 'right'),
			array('data' => $abrechnung),
			array('data' => $ausbezahlt)
		);
	}

  //return a themed schedule table
  $output .= theme_table(array('header' => $tblheader,
                           'rows' => $table_rows,
                           'attributes' => array('class' => 'table_dfs', 'width' => '100%'),
                           'caption' => '',
                           'colgroups' => array(),
                           'sticky' => FALSE,
                           'empty' => 'No data is available',
                          )); 
						  	
	$output .= theme('pager', array('tags' => array()));
	
	$output .= '<div style="font-size:11px">(<sup>*</sup>) Ausbezahlt werden Beträge erst nach der 14-tägigen Kündigungsfrist von neuen Mitgliedern und frühestens, wenn mindestens 30 Euro in Summe erreicht wurden.</div>';
			
	$output .= '<div style="font-size:11px">(<sup>**</sup>)  Startprovision: Sobald Du mindestens 3 Personen innerhalb von 30 Tagen nach Deinem Vereinsbeitritt geworben hast, tritt der Schnellstartbonus in Kraft.
Technisch ist es uns aber nur möglich, 50 Euro anstatt die höhere Startprovision von 100 Euro anzuzeigen. Die Anhebung passiert erst nach der 30-tägigen Zeitspanne inkl. Kündigungsfrist!</div>';			
	return $output;		
}


function angelio_kuendigen($polizze) {
global $user;

	$uid = $user->uid;
	$userdata = angelio_get_userobject($uid);

	db_set_active('angelio_daten');
	$sql = "SELECT * FROM  tbl_Vertraege_online WHERE Polizzennummer=" . $polizze;
	$result = db_query($sql)->fetchAssoc();		

	$datetime1 = new DateTime();
	$datetime2 = new DateTime($result['datAbschluss']);
	$interval = $datetime2->diff($datetime1);
	$date_anlage = date_create($result['datAbschluss']);

	$output = "<p>Hallo " . $userdata->first_name. "!</p>";
	
	if ($interval->days < 15) {
 		$output .= '<p>Du kannst bei angelio innerhalb von 14 Tagen ohne Angabe von Gründen Deine Verträge bei angelio kündigen. Beachte jedoch, dass bei einer Kündigung alle allfälligen Provisionsansprüche von Deiner Downline verloren gehen. Weitere Verträge, die Du über angelio abgeschlossen hast, sind von der Kündigung dieses Vertrages natürlich nicht betroffen (z.B. Bausparer).</p>';
	$output .= "<p>Deine gesetzliche Kündigungsfrist läuft noch bis: " . date("d.m.Y",mktime(0, 0, 1, date_format($date_anlage, 'm'), date_format($date_anlage, 'd')+14, date_format($date_anlage, 'Y')));
	} else {
 		$output .= '<p>Du kannst jährlich von Deinen Verträgen zurücktreten. Beachte jedoch, dass bei einer Kündigung alle allfälligen Provisionsansprüche von Deiner Downline verloren gehen. Weitere Verträge, die Du über angelio abgeschlossen hast, sind von der Kündigung dieses Vertrages natürlich nicht betroffen (z.B. Bausparer).</p>';
		$output .= "<p>Nächstmöglicher Kündigungstermin: " . date("m.d.Y",mktime(0, 0, 0, 1, date_format($date_anlage, 'm'), date_format($date_anlage, 'Y')+1)) . "</p>";		
	}
	$output .= "<p>Versicherungsbestätigung: " . $polizze;
	// $output .= "<p>Alter: " . $interval->format('%a Tage');
	
	db_set_active();
		
	$output .= '<form title="Den Vertrag jetzt kündigen" action="/kuendigen/' . $polizze . '/jetzt" method="post"><input type="hidden" value="' . $polizze . '"><input type="submit" value="Den Vertrag jetzt kündigen"></form>';
		
	return $output;
}

function angelio_kuendigen_jetzt($polizze) {
global $user;

	$uid = $user->uid;
	$userdata = angelio_get_userobject($uid);
	
	$output = "<p>Hallo " . $userdata->first_name . "!</p>";
	
	db_set_active('angelio_daten');
	$sql = "SELECT * FROM {tbl_Vertraege_online} vt LEFT JOIN {tbl_Produkte_Online} pr ON vt.ProduktID=pr.ProduktID WHERE KundenID=" . $uid;
	$result = db_query($sql);	
	if ($result->rowCount() == "1") {
 		$output .= "Mit Bedauern müssen wir feststellen, dass Du unseren Verein verlassen möchtest. Kündigungen innerhalb von 14 Tagen sind sofort wirksam. Alle anderen Kündigungen müssen einen Monat vor Jahresablauf gekündigt werden.<br><br>";
		$output .= "Wir wünschen Dir weiterhin alles Gute!<br><br>";
		$output .= '<form title="Den Vertrag jetzt kündigen" action="/kuendigen/' . $polizze . '/sofort" method="post"><input type="hidden" value="' . $polizze . '"><input type="submit" value="Jetzt kündigen"></form>';
		$output .= "<br><br>P.S.: Solltest Du andere Verträge (Bausparer, …) über angelio abgeschlossen haben, werden Dir die notwendigen Unterlagen per Post zugesandt.";
	} else {
		$output .= "Mit Bedauern nehmen wir zur Kenntnis, dass Du eine Unfallversicherung kündigen möchtest. ";
		$output .= "Kündigungen innerhalb von 14 Tagen sind sofort wirksam. Alle anderen Kündigungen müssen einen Monat vor Jahresablauf gekündigt werden.";		
		$output .= '<form title="Den Vertrag jetzt kündigen" action="/kuendigen/' . $polizze . '/sofort" method="post"><input type="hidden" value="' . $polizze . '"><input type="submit" value="Jetzt kündigen"></form>';
		$output .= "<br><br>P.S.: Solltest Du andere Verträge (Bausparer, …) über angelio abgeschlossen haben, werden Dir die notwendigen Unterlagen per Post zugesandt.";
	}			
		
	db_set_active();	
	return $output;
}

function angelio_kuendigen_sofort($polizze) {
global $user;

	$uid = $user->uid;
	$userdata = angelio_get_userobject($uid);

	$output = "<p>Hallo " . $userdata->first_name . "!</p>";
	
	$output .= "Dein Vertrag wird nun gekündigt.";

	// in Datenbank schreiben:
	
	db_set_active('angelio_daten');
	
	
	$sql = "SELECT * FROM {tbl_Vertraege_Status} WHERE Polizzennummer='" . $polizze . "'";
	$result = db_query($sql);
	
	if ($result->rowCount() == "0") {
		$sql = "INSERT INTO {tbl_Vertraege_Status} (Polizzennummer, datGekuendigt) VALUES ('" . $polizze . "', NOW())";	
		db_query($sql);
	} else {
		$sql = "UPDATE {tbl_Vertraege_Status} SET datGekuendigt=NOW() WHERE Polizzennummer='" . $polizze . "'";
		db_query($sql);		
	}
	
	db_set_active();	
	
	// E-Mail senden:
	
	$params = array(
		'Username' => $userdata->username,
		'Vorname' => $userdata->first_name,
		'Nachname' => $userdata->last_name,		
		'Strasse' => $userdata->street,
		'PLZ' => $userdata->postal,
		'Ort' => $userdata->city,
		'Land' => $userdata->country,
		'Polizze' => $polizze,
		'Datum' => date("d.m.Y")
	);
	
	$to = $userdata->email . ',office@angelio.at';
	
	$sent = drupal_mail('angelio', 'kuendigen', $to , language_default(), $params, 'office@angelio.at');
	
	if($sent){
		drupal_set_message('Ein E-Mail wurde zu Ihnen gesendet.', 'status');	
	} else {
		drupal_set_message('E-Mail konnte nicht gesendet werden.', 'error');
	}
	
	return $output;
}


function angelio_erweitern($polizze) {
global $user;
	$uid = $user->uid;
	$userdata = angelio_get_userobject($uid);

	$output = "<p>Hallo " . $userdata->first_name . "!</p>";
	
 	$output .= '<p>Hier kannst Du Deine Unfallversicherung aufstocken. Sollten Dir € 100.000,- Grundversicherungssumme zu wenig sein, dann verdopple ganz einfach Deine Grundsumme.</p>
<p>Bei € 200.000,- ergibt das eine maximale Leistung von € 600.000,- (inklusive der 300%igen Progression).</p>
<p>Die Zahlungsweise wird von Deinen Stammdaten übernommen. Nach spätestens 48 Stunden wird Deine Bestellung umgesetzt. Eine Kündigungsfrist von 14 Tagen ist natürlich auch hier gegeben.<p>

<p>Wenn Du die Grundsumme erhöht hast, besitzt Du dann zwei eigenständige Verträge, die auf Deinen Namen laufen und somit einzeln jederzeit jährlich kündbar sind.</p>';
	$output .= "<p>Das ist deine aktuelle Versicherungsbestätigung: <a href='/polizze/" . $uid . "/" . $polizze . "'>" . $polizze . "</a>";
	
	$output .= '<form title="Den Vertrag jetzt erweitern" action="/erweitern/' . $polizze . '/jetzt" method="post"><input type="hidden" value="' . $polizze . '"><input type="submit" value="Den Vertrag erweitern"></form>';
	
	
	return $output;
}

function angelio_erweitern_jetzt($polizze) {
global $user;

	$uid = $user->uid;
	$userdata = angelio_get_userobject($uid);

	$output = "<p>Hallo " . $userdata->first_name . "!</p>";
	
	db_set_active('angelio_daten');
	$sql = "SELECT * FROM  tbl_Vertraege_online WHERE Polizzennummer=" . $polizze;
	$result = db_query($sql)->fetchAssoc();		

	$output .= "<p>Wenn Du jetzt auf kostenpflichtig BESTELLEN drückst, dann wird innerhalb von 48 Stunden eine zweite private Unfallversicherung auf Deinen Namen ausgestellt.</p>";

	$output .= '<form title="Den Vertrag jetzt erweitern" action="/erweitern/' . $polizze . '/sofort" method="post"><input type="hidden" value="' . $polizze . '"><input type="submit" value="kostenpflichtig BESTELLEN"></form>';

	
	$sql = "SELECT * FROM {tbl_Vertraege_Status} WHERE Polizzennummer='" . $polizze . "'";
	$result = db_query($sql);
	
	if (!$result) {
		$sql = "INSERT INTO {tbl_Vertraege_Status} (Polizzennummer, datErweitert) VALUES ('" . $polizze . "', NOW())";	
		db_query($sql);
	} else {
		$sql = "UPDATE {tbl_Vertraege_Status} SET datErweitert=NOW() WHERE Polizzennummer='" . $polizze . "'";
		db_query($sql);		
	}
		
	db_set_active();
				
	return $output;
}

function angelio_erweitern_sofort($polizze) {
global $user;

	$uid = $user->uid;
	$userdata = angelio_get_userobject($uid);

	$output = "<p>Hallo " . $userdata->first_name . "!</p>";
	$output .= "Dein Vertrag $polizze wird nun erweitert.";
	
	// in Datenbank schreiben:
	
	db_set_active('angelio_daten');
	$sql = "SELECT * FROM {tbl_Vertraege_Status} WHERE Polizzennummer='" . $polizze . "'";
	$result = db_query($sql);
	
	if (!$result) {
		$sql = "INSERT INTO {tbl_Vertraege_Status} (Polizzennummer, datErweitert) VALUES ('" . $polizze . "', NOW())";	
		db_query($sql);
	} else {
		$sql = "UPDATE {tbl_Vertraege_Status} SET datErweitert=NOW() WHERE Polizzennummer='" . $polizze . "'";
		db_query($sql);		
	}
	db_set_active();

	// E-Mail senden		
	$params = array(
  		'Vorname' => $userdata->first_name,
  		'Polizze' => $polizze
	);
	
	$to = $userdata->email. ',office@angelio.at';
	$sent = drupal_mail('angelio', 'erweitern', $to, language_default(), $params, 'office@angelio.at');
	
	if($sent){
		drupal_set_message('Ein E-Mail wurde zu Ihnen gesendet.', 'status');	
	} else {
		drupal_set_message('E-Mail konnte nicht gesendet werden.', 'error');
	}
	
	return $output;
}

function angelio_schaden() {
global $user;

	$uid = $user->uid;
	$userdata = angelio_get_userobject($uid);

	$output = "<p>Hallo " . $userdata->first_name . "!</p>";

	$output .= "Unfälle müssen sofort gemeldet werden, um den Richtlinien der Versicherungen zu entsprechen. Daher haben wir hier ein Schadensformular zum Ausdrucken, welches Du mit Deinen Daten ausfüllen und an uns per Post senden musst.
Zusätzlich bitten wir Dich, uns eine E-Mail zu senden, um uns über einen möglichen Schadenseintritt vorab zu informieren. Alle nötigen Schritte werden wir dann unverzüglich in die Wege leiten.
<br><br>";
	$output .= "<p><b>Postadresse:</b><br>Verein angelio Kaufgemeinschaft<br>Aigen 1<br>A-4654 Bad Wimsbach-Neydharting<br></p>";

	$output .= "<h3>Unfallschadensformular hier <a href='/downloads/FormularSchadenUnfall.pdf' target='_blank'>downloaden und ausdrucken...</a></h3>";
				
	return $output;
}

function angelio_visitenkarten($uid) {
global $user;

	if($uid!='0') {
		$userdata = angelio_get_userdata($uid);
	} else {
		$uid = $user->uid;
		$userdata = angelio_get_userdata($uid);
	}
	
	$username = $userdata['strUsername_O']; 
	$vorname = $userdata['strVName_O'];
	$nachname = $userdata['strNName_O'];
	$telefon = $userdata['strTelefon_O'];
	$mobil = $userdata['strMobil_O'];
	$email = $userdata['strEmail_O'];

	if ($mobil != "") 
		{$telefon = $mobil; }
	 
	require_once('sites/all/libraries/tcpdf_min/tcpdf.php');
		
	$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
	
	// set document information
	$pdf->SetCreator(PDF_CREATOR);
	$pdf->SetAuthor('angelio');
	$pdf->SetTitle('angelio Visitenkarten');
	$pdf->SetSubject('Meine angelio Visitenkarten');
	$pdf->SetKeywords('angelio, Visitenkarten');
	
	// remove default header/footer
	$pdf->setPrintHeader(false);
	$pdf->setPrintFooter(false);
	
	// set default monospaced font
	$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
	
	// set margins
	$pdf->SetMargins(10, 17, 5);
	$pdf->SetFooterMargin(0);
	// set auto page breaks
	$pdf->SetAutoPageBreak(FALSE, 5);
	
	// set image scale factor
	$pdf->setImageScale(1.3);
	
$pdf->SetFont('helvetica', 'B', 20);
$pdf->SetCellPadding(0);
$tagvs = array('p' => array(0 => array('h' => 0, 'n' => 0), 1 => array('h' => 0, 'n'=> 0)));
$pdf->setHtmlVSpace($tagvs);
$pdf->setCellHeightRatio(1.25);

// add a page
$pdf->AddPage();

$pdf->SetFont('helvetica', '', 8);

// -----------------------------------------------------------------------------

$tbl = <<<EOT
<table cellspacing="0" cellpadding="0" border="0">
    <tr>
    <td width="50%">
	    <table width="320px">
	    <tr>
	    	<td></td><td><img src="/angelio-logo.jpg" align="right"></td>
	    </tr>
	    <tr>
	    	<td colspan="2"><img alt="" src="/sites/default/files/images/yellow-line.png" style="width: 310px; height: 2px; "></td>
	    </tr>
	    <tr><td width="20px"></td>
	    	<td width="210" style="padding-left:20px;"><span style="font-size:18px; margin-top:10px;">$vorname<br>$nachname</span><br /><br /><span style="font-size:11px;">$telefon<br>$email<br /></span></td>
	    	<td width="90" valign="top" ><img align="right" src="http://www.angelio.at/qr/index_qr.php?data=www.angelio.at%2F$username" alt="QR Code" width="80" height="80" /></td>
	    </tr>
	    <tr><td width="20px"></td>
	    	<td colspan="2" height="20px"><span style="font-size:14px; line-height:23px; color:#0060B1;">www.angelio.at/$username<br />&nbsp;</span></td>
	    </tr>
	    </table>
	</td>
    <td width="50%" align="right">
	    <table width="320px" align="left">
	    <tr>
	    	<td></td><td><img src="/angelio-logo.jpg" align="right"></td>
	    </tr>
	    <tr>
	    	<td colspan="2"><img alt="" src="/sites/default/files/images/yellow-line.png" style="width: 310px; height: 2px; "></td>
	    </tr>
	    <tr><td width="20px"></td>
	    	<td width="210"><span style="font-size:18px; margin-top:10px;">$vorname<br>$nachname</span><br /><br /><span style="font-size:11px;">$telefon<br>$email<br /></span></td>
	    	<td width="90" valign="top" ><img align="right" src="http://www.angelio.at/qr/index_qr.php?data=www.angelio.at%2F$username&size=150x150" alt="QR Code" width="80" height="80" /></td>
	    </tr>
	    <tr><td width="20px"></td>
	    	<td colspan="2" ><span style="font-size:14px; line-height:23px; color:#0060B1;">www.angelio.at/$username<br />&nbsp;</span></td>
	    </tr>
	    </table>
	</td>
    </tr>
</table>
EOT;


$pdf->writeHTML($tbl . $tbl . $tbl . $tbl . $tbl, true, false, false, false, '');
	
	// ---------------------------------------------------------
	
	//Close and output PDF document
	$pdf->Output('angelio-visitenkarten.pdf', 'I');

	//return "";
}

function angelio_flyer($uid) {
global $user;

	if($uid!='0') {
		$userdata = angelio_get_userdata($uid);
	} else {
		$uid = $user->uid;
		$userdata = angelio_get_userdata($uid);
	}
	
	$username = $userdata['strUsername_O']; 
	$vorname = $userdata['strVName_O'];
	$nachname = $userdata['strNName_O'];
	$telefon = $userdata['strTelefon_O'];
	$mobil = $userdata['strMobil_O'];
	$email = $userdata['strEmail_O'];

	if ($mobil != "") 
		{$telefon = $mobil; }
	 
	require_once('sites/all/libraries/tcpdf/tcpdf.php');

	// create new PDF document
	$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
	
	// set document information
	$pdf->SetCreator(PDF_CREATOR);
	$pdf->SetAuthor('angelio');
	$pdf->SetTitle('angelio Flyer A4');
	$pdf->SetSubject('angelio Flyer A4');
	$pdf->SetKeywords('angelio');
	
	// remove default header/footer
	$pdf->setPrintHeader(false);
	$pdf->setPrintFooter(false);
	
	// set default monospaced font
	$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
	
	// set margins
	$pdf->SetMargins(0, 0, 0);
	$pdf->SetHeaderMargin(0);
	$pdf->SetFooterMargin(0);
	
	// set auto page breaks
	$pdf->SetAutoPageBreak(FALSE);
	
	// set image scale factor
	$pdf->setImageScale(1);
	
	// -------------------------------------------------------------------
	
	// add a page
	$pdf->AddPage();
	
	// set JPEG quality
	$pdf->setJPEGQuality(90);
	
	// Image method signature:
	// Image($file, $x='', $y='', $w=0, $h=0, $type='', $link='', $align='', $resize=false, $dpi=300, $palign='', $ismask=false, $imgmask=false, $border=0, $fitbox=false, $hidden=false, $fitonpage=false)
	
	// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	
	// Image example with resizing
	$pdf->Image('http://www.angelio.at/downloads/angelio_flyer_A4_leer.jpg', 5, 5, 200 , 282, 'JPG', '', '', true, 300, '', false, false, 0, false, false, false);
	$pdf->Image('http://www.angelio.at/qr/index_qr.php?data=www.angelio.at%2F' . $username, 177, 139, 14 , 14, 'PNG', '', '', true, 300, '', false, false, 0, false, false, false);
	$pdf->SetXY(98,275);
	$pdf->Write(0, 'Mehr auf: www.angelio.at/' . $username, '', 0, 'L', true, 0, false, false, 0);
	// -------------------------------------------------------------------
	
	//Close and output PDF document
	$pdf->Output('angelio_flyer_A4.pdf', 'I');
}


function angelio_backup($uid) {
global $user;
	
	if($uid!='0') {
		$userdata = angelio_get_userobject($uid);
	} else {
		$uid = $user->uid;
		$userdata = angelio_get_userobject($uid);
	}
	
	db_set_active('angelio_daten');
	$sql = "SELECT * FROM {tbl_Backup} WHERE KundenID_online=" . $uid;
	$result = db_query($sql)->fetchAssoc();
	db_set_active();	
	if ($result) {
		$output = "<p>Dein Backup Manger Zugang ist: <b><a href='http://" . $result['Subdomain'] . ".konsole.backup-manager.eu' target='_blank'>http://" . $result['Subdomain'] . ".konsole.backup-manager.eu</a></b></p>";
		$output .= "<p>Dein Backup Manager Benutzername ist: " . $result['Email'] ."</p>";
        $output .= "<p>Das Passwort f&uuml;r den Backup Manager haben wir dir per E-Mail zugesandt.<br>Wenn du es vergessen hast, wende dich bitte an unseren <a href='/support'>Support</a>.</p>";
        
		if ($result['aktiv']) {
			$output .= "<p>Dein Zugang ist aktiv.</p>";
		} else {
			$output .= "Dein Zugang ist noch nicht aktiviert. Bitte habe noch etwas Geduld, du wirst per E-Mail informiert, sobald dein Backup-Manager eingerichtet ist.<p>&nbsp;</p>";
		} 
	} else {
		$output = "Bitte w&auml;hle hier deinen gew&uuml;nschten Zugangsnamen und eine E-Mail Adresse f&uuml;r den Backup Manager.<br><br>";
		$output .= "Dein Zugang wird dann so aussehen: <u>http://<b>" . $userdata->username . "</b>.konsole.backup-manager.eu</u><br><br>"; 
		$output .= "Der Einfachheit halber, haben wir die Felder schon mit deinem angelio Benutzernamen und deiner E-Mail Adresse ausgef&uuml;llt,<br>du kannst aber ganz andere Eintr&auml;ge w&auml;hlen!<br><br>";
		$output .= "Bitte beachte, dass der Name schon vergeben sein kann. Wir h&auml;ngen dann ein paar Zahlen daran.<br>";
		$output .= "Sobald du deinen Namen aktiviert hast, legen wir deinen Backup Manager an. Das kann 2-3 Werktage dauern.<br>";
		$output .= "Wir informieren dich per E-Mail, wenn der Zugang eingerichtet ist!";
		$form = drupal_get_form('angelio_backup_form',$uid);
		//$form['userid']['value'] = $uid;
		$output .= drupal_render($form);
        $output .= "<p>&nbsp;</p>";
	}	
	
	return $output;
}

function angelio_backup_form($form, &$form_state, $uid) {
  $userdata = angelio_get_userobject($uid);

  $form['subdomain'] = array(
    '#type' => 'textfield',
    '#title' => 'Gew&uuml;nschter Zugangsname zum Backup Manager:',
    '#default_value' => $userdata->username,
    '#required' => TRUE,
    '#element_validate' => array('angelio_subdomain_validate'),
  );
  
 
  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => 'Gew&uuml;nschte E-Mail Adresse als Benutzername:',
    '#default_value' => $userdata->email,
    '#required' => TRUE,
    '#element_validate' => array('angelio_email_validate'),
  ); 
  
  $form['userid'] = array(
  	'#type' => 'hidden', 
  	'#value' => $uid,
	);
  
  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => 'Jetzt aktivieren',
  );
  return $form;
}

function angelio_subdomain_validate($element, &$form_state) {
  $username = $element['#value']; 
  if(!angelio_validate_url($username)) {
    form_error($element, t('Der Zugangsname "%s" ist ung&uuml;ltig. Bitte keine Umlaute, Leerzeichen, Satzzeichen und Sonderzeichen verwenden.', array('%s'=>$username)));
  }
}

function angelio_email_validate($element, &$form_state, $form) {
  $value = $element['#value'];
  if (!valid_email_address($value)) {
    form_error($element, t('Bitte eine g&uuml;ltige E-Mail Adresse eingeben.'));
  }
}

function angelio_backup_form_submit($form, &$form_state) {
	$subdomain = $form_state['values']['subdomain'];
    $email = $form_state['values']['email'];
	$uid = $form_state['values']['userid'];
    $userdata = angelio_get_userobject($uid);
	
	db_set_active("angelio_daten");
	$sql = "INSERT INTO {tbl_Backup} (KundenID_online, Subdomain, Email,aktiv) VALUES ('" . $uid . "', '" . $subdomain . "','" . $email . "',0)";	
	db_query($sql);
	db_set_active();
    
    $params = array(
    'user' => $userdata->username,
    'uid' => $uid,
    'usermail' => $userdata->email,
    'Subdomain' => $subdomain,
    'Email' => $email,
    );

    $to = 'support@angelio.at';
    
    $sent = drupal_mail('angelio', 'backup', $to , language_default(), $params, 'support@angelio.at');
    
    if($sent){
        drupal_set_message('Ein E-Mail wurde an den Support gesendet. Wir werden deinen Backup Manager jetzt einrichten und geben dir Bescheid, wenn alles fertig ist. Das kann 2-3 Werktage dauern.', 'status');    
    } else {
        drupal_set_message('Es ist ein Fehler aufgetreten. Bitte wende dich an den Support.', 'error');
    }
      
}

function angelio_gutschein_check($uid,$gid) {

    $user = user_load($uid);
    $gutschein = node_load($gid);
    $anzahl = $gutschein->field_max_einloesungen['und'][0]['value'];
    $member = angelio_get_userobject($uid);
    $partner = node_load($gutschein->field_partnerfirma['und'][0]['nid']);
    $partnername = $partner->title;
    
    $output = '<h4>' . $gutschein->title . '</h4><h5>' . $partnername . '</h5><p>f&uuml;r <b>' . $member->first_name . ' ' . $member->last_name . ' (' . $user->name . ')</b> einlösen?</p>';
    
    db_set_active("angelio_daten");
    $result = db_query('SELECT * FROM tbl_Gutscheine WHERE uid=' . $uid . ' AND gid=' . $gid );
    db_set_active();
    if ($result) {
        $count = 0;
        foreach ($result as $row) {
            $count++;
        }
        if ($count < $anzahl) {
            $output .= '<div style="color:green; font-size:16px;">Der Gutschein wurde ' . $count . ' mal von ' . $anzahl . ' mal eingelöst!<br>&nbsp;';
            $gsform = drupal_get_form('angelio_gutschein_check_form',array($uid,$gid));
            $output .= render($gsform);
        } else {
            $output .= '<div style="color:red; font-size:16px;">Der Gutschein wurde schon ' . $count . ' mal von ' . $anzahl . ' mal eingelöst!';        
        }
    } else {
        $output .= "<p>Der Gutschein wurde vom Mitglied noch nicht eingel&ouml;st.</p>";
        $gsform = drupal_get_form('angelio_gutschein_check_form',array($uid,$gid));
        $output .= render($gsform);
    }
    return $output;
}


function angelio_gutschein_clear($uid,$gid) {
    db_set_active("angelio_daten");
    db_query('DELETE FROM tbl_Gutscheine WHERE uid=' . $uid . ' AND gid=' . $gid)->execute();
    db_set_active();
    return "Gutscheine sind wieder freigegeben.";
}

function angelio_gutschein_check_form($form,&$form_state,$args){
    $form = array();
    $form['uid'] = array(
        '#type' => 'hidden',
        '#value' => $args[0],
    );
       
    $form['gid'] = array(
        '#type' => 'hidden',
        '#value' => $args[1],
    );
    
    $form['frage'] = array(
        '#markup' => '<h4>Den Gutschein jetzt einlösen?</h4>',
    );
    $form['submit_ja'] = array(
        '#type' => 'submit',
        '#value' => '  --- Ja ---  '
    );
    
    $form['submit_nein'] = array(
        '#type' => 'submit',
        '#value' => '  --- Nein ---  '
    );
    
    return $form;
}

function angelio_gutschein_check_form_submit($form,&$form_state){
    if($form_state['values']['op'] == '  --- Ja ---  '){
        $now = date("Y-m-d H:i:s", time());
        db_set_active("angelio_daten");
        $success = db_insert('tbl_Gutscheine')
            ->fields(array(
            'uid' => $form_state['values']['uid'],
            'gid' => $form_state['values']['gid'],
            'datum' => $now
            ))->execute();
        db_set_active("angelio_daten");
        if ($success=='0') {
            drupal_set_message("Der Gutschein wurde eingel&ouml;st!");
        } else {
            drupal_set_message($success);
            drupal_set_message("Es ist ein Fehler beim Speichern aufgetreten","error");
        }
        drupal_goto("/partnerfirmen");
    } else if($form_state['values']['op'] == '  --- Nein ---  '){
        drupal_set_message("Der Gutschein wurde NICHT eingel&ouml;st!");
        drupal_goto("/partnerfirmen");
    }
}


function angelio_gutschein_drucken($uid,$gid) {
global $user;

    if ($uid == 0) {
        return "<h3>Diesen Gutschein k&ouml;nnen nur angelio Mitglieder ausdrucken.</h3><p>Bitte wenden Sie sich an eines unserer Mitglieder oder kontaktieren Sie uns unter <a href='mailto:office@angelio.at'>office@angelio.at</a>!</p>";
    }

    if($uid!='0') {
        $userdata = angelio_get_userdata($uid);
    } else {
        $uid = $user->uid;
        $userdata = angelio_get_userdata($uid);
    }
    
    $username = $userdata['strUsername_O']; 
    $vorname = $userdata['strVName_O'];
    $nachname = $userdata['strNName_O'];
    $telefon = $userdata['strTelefon_O'];
    $mobil = $userdata['strMobil_O'];
    $email = $userdata['strEmail_O'];


    $gutschein = node_load($gid);
    $partner = node_load($gutschein->field_partnerfirma['und'][0]['nid']);
    $partnername = $partner->title;
        

    if ($mobil != "") 
        {$telefon = $mobil; }
     
    require_once('sites/all/libraries/tcpdf/tcpdf.php');

    // create new PDF document
    $pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
    
    // set document information
    $pdf->SetCreator(PDF_CREATOR);
    $pdf->SetAuthor('angelio');
    $pdf->SetTitle('angelio Gutschein A4');
    $pdf->SetSubject('angelio Gutschein A4');
    $pdf->SetKeywords('angelio');
    
    // remove default header/footer
    $pdf->setPrintHeader(false);
    $pdf->setPrintFooter(false);
    
    // set default monospaced font
    $pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
    
    // set font
    $pdf->SetFont('helvetica', '', '24');
    
    // set margins
    $pdf->SetMargins(0, 0, 0);
    $pdf->SetHeaderMargin(0);
    $pdf->SetFooterMargin(0);
    
    // set auto page breaks
    $pdf->SetAutoPageBreak(FALSE);
    
    // set image scale factor
    $pdf->setImageScale(1);
    
    // -------------------------------------------------------------------
    
    // add a page
    $pdf->AddPage();
    
    // set JPEG quality
    $pdf->setJPEGQuality(90);
    
    // Image method signature:
    // Image($file, $x='', $y='', $w=0, $h=0, $type='', $link='', $align='', $resize=false, $dpi=300, $palign='', $ismask=false, $imgmask=false, $border=0, $fitbox=false, $hidden=false, $fitonpage=false)
    
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    
    // Image example with resizing
    $pdf->Image('http://www.angelio.at/downloads/angelio_gutschein_A4_leer.jpg', 5, 5, 200 , 282, 'JPG', '', '', true, 300, '', false, false, 0, false, false, false);
    $pdf->Image('http://www.angelio.at/qr/index_qr.php?data=www.angelio.at%2Fgs%2Fcheck%2F' . $uid . '%2F' . $gid, 85, 170, 54 , 54, 'PNG', '', '', true, 300, '', false, false, 0, false, false, false);
    $pdf->SetXY(15,120);
    $pdf->Write(0, $gutschein->title, '', 0, 'C', true, 0, false, false, 0);
    $pdf->SetXY(15,140);
    $pdf->Write(0, $partnername, '', 0, 'C', true, 0, false, false, 0);
    $pdf->SetFontSize('12');
    $pdf->SetXY(15,270);
    $pdf->Write(0, 'Mehr auf: www.angelio.at/' . $username, '', 0, 'C', true, 0, false, false, 0);
    // -------------------------------------------------------------------
    
    //Close and output PDF document
    $pdf->Output('angelio_flyer_A4.pdf', 'I');
}

function angelio_amazon_beantragen() {
    global $user;
    $userdata = angelio_get_userobject($user->uid);

    $params = array(
    'user' => $userdata->username,
    'uid' => $userdata->member_id, 
    'usermail' => $userdata->email,
    );

    $to = 'support@angelio.at';
    
    $sent = drupal_mail('angelio', 'amazonBeantragt', $to , language_default(), $params, 'support@angelio.at');
    
    if($sent){
        $output = 'Ein E-Mail wurde an den Support gesendet. <br>Wir werden deine Amazon ID jetzt einrichten und geben dir Bescheid, wenn alles fertig ist. <br>Das kann 1-3 Werktage dauern.';    
    } else {
        $output = 'Es ist ein Fehler aufgetreten. Bitte wende dich an den Support.';
    }
    return $output;
}


function angelio_amazon_aktivieren($uid) {
global $user;

    if($uid!='0') {
        $userdata = angelio_get_userobject($uid);
    } else {
        $uid = $user->uid;
        $userdata = angelio_get_userobject($uid);
    }
    
  db_set_active("angelio_daten");
  $result = db_query("SELECT uid FROM tbl_Amazon WHERE uid=" . $uid)->fetchCol();
  db_set_active();
  if (!isset($result[0])) {
        db_set_active("angelio_daten");
        $success = db_insert('tbl_Amazon')
            ->fields(array(
            'uid' => $uid
            ))->execute();
        db_set_active();        
  }

    $params = array(
    'user' => $userdata->username,
    'uid' => $userdata->member_id, 
    'vorname' => $userdata->first_name,
    'usermail' => $userdata->email,
    );

    $to = 'support@angelio.at,'.$userdata->email;
    
    $sent = drupal_mail('angelio', 'amazonAktiviert', $to , language_default(), $params, 'support@angelio.at');

    $output = "<h5>Die Amazon ID wurde aktiviert: angel" . $uid . "-21.</h5>";
    $output .= "<p>Das ist Dein Amazon Link: <a target='_blank' href='http://www.amazon.de/?tag=angel" . $uid . "-21'>http://www.amazon.de/?tag=angel" . $uid . "-21</a></p>";
    $output .= "<p>Das ist Dein Amazon BuyVIP Link: <a target='_blank' href='http://de.buyvip.com/?tag=angel" . $uid . "-21'>http://de.buyvip.com/?tag=angel" . $uid . "-21</a></p>";
    return $output;
}


function angelio_scheck($name=0,$uid,$betrag,$datum) {
global $user;

    if($uid!='0') {
        $userdata = angelio_get_userobject($uid);
    } else {
        $uid = $user->uid;
        $userdata = angelio_get_userobject($uid);
    }

    $scheck = $_SERVER['DOCUMENT_ROOT'] . '/downloads/angelio-scheck.png';
    $font = $_SERVER['DOCUMENT_ROOT'] . '/downloads/segoesc.ttf';
     
    $img = imagecreatefrompng($scheck);  //--- open img file ---
    
    header ('Content-Type: image/png');
    $text_color = imagecolorallocate($img, 5, 57, 143);
    
    if ($name) {
        $text = $userdata->first_name . " " . $userdata->last_name . " (" . $userdata->username . ")";
    } else {
        $text = $userdata->username;
    }
    imagettftext($img, 27, 0, 180, 220, $text_color, $font, $text); 
    imagettftext($img, 27, 0, 700, 140, $text_color, $font, $datum);
    imagettftext($img, 27, 0, 950, 225, $text_color, $font, $betrag . ',-'); 
    imagettftext($img, 27, 0, 120, 280, $text_color, $font, "-- " . num2text(intval($betrag)) . " --"); 
    imagepng($img);
    imagedestroy($img);

}

